<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xmlns:ns1="http://sozi.baierouge.fr"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="47457.719"
   height="32252.469"
   id="svg3172"
   version="1.1"
   inkscape:version="0.48.4 r9939"
   sodipodi:docname="HltTestFramework.svg">
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.08"
     inkscape:cx="7432.0398"
     inkscape:cy="-1632.4687"
     inkscape:document-units="px"
     inkscape:current-layer="g5794"
     showgrid="false"
     inkscape:window-width="1440"
     inkscape:window-height="851"
     inkscape:window-x="0"
     inkscape:window-y="25"
     inkscape:window-maximized="1"
     fit-margin-top="0"
     fit-margin-left="0"
     fit-margin-right="0"
     fit-margin-bottom="0" />
  <defs
     id="defs3174">
    <marker
       inkscape:stockid="Arrow1Mend"
       orient="auto"
       refY="0.0"
       refX="0.0"
       id="Arrow1Mend"
       style="overflow:visible;">
      <path
         id="path4979"
         d="M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z "
         style="fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;"
         transform="scale(0.4) rotate(180) translate(10,0)" />
    </marker>
    <inkscape:perspective
       id="perspective7935"
       inkscape:persp3d-origin="3197.5945 : 14700.392 : 1"
       inkscape:vp_z="9738.0334 : 9737.1011 : 1"
       inkscape:vp_y="970.59398 : 1447.708 : 0"
       inkscape:vp_x="1993.8012 : 15757.054 : 1"
       sodipodi:type="inkscape:persp3d" />
    <linearGradient
       id="linearGradient7206">
      <stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0"
         id="stop7208" />
      <stop
         style="stop-color:#97d3ff;stop-opacity:1;"
         offset="1"
         id="stop7210" />
    </linearGradient>
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4405"
       xlink:href="#linearGradient4039-92"
       inkscape:collect="always" />
    <linearGradient
       id="linearGradient4039-92">
      <stop
         id="stop4041-7"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-54"
         offset="1"
         style="stop-color:#ebcd40;stop-opacity:1;" />
    </linearGradient>
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4442"
       xlink:href="#linearGradient4039"
       inkscape:collect="always" />
    <linearGradient
       id="linearGradient4039"
       inkscape:collect="always">
      <stop
         id="stop4041"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043"
         offset="1"
         style="stop-color:#ffffff;stop-opacity:0;" />
    </linearGradient>
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,71.157321)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4444"
       xlink:href="#linearGradient4039-9"
       inkscape:collect="always" />
    <linearGradient
       id="linearGradient4039-9"
       inkscape:collect="always">
      <stop
         id="stop4041-3"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-50"
         offset="1"
         style="stop-color:#ffffff;stop-opacity:0;" />
    </linearGradient>
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,71.157321)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4446"
       xlink:href="#linearGradient4039-9-9"
       inkscape:collect="always" />
    <linearGradient
       id="linearGradient4039-9-9"
       inkscape:collect="always">
      <stop
         id="stop4041-3-6"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-50-1"
         offset="1"
         style="stop-color:#ffffff;stop-opacity:0;" />
    </linearGradient>
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4414"
       xlink:href="#linearGradient4039-92-2"
       inkscape:collect="always" />
    <linearGradient
       id="linearGradient4039-92-2">
      <stop
         id="stop4041-7-4"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-54-2"
         offset="1"
         style="stop-color:#2eff64;stop-opacity:1;" />
    </linearGradient>
    <linearGradient
       id="linearGradient4039-92-2-1">
      <stop
         id="stop4041-7-4-3"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-54-2-6"
         offset="1"
         style="stop-color:#68ff84;stop-opacity:1;" />
    </linearGradient>
    <linearGradient
       id="linearGradient4039-9-9-3"
       inkscape:collect="always">
      <stop
         id="stop4041-3-6-1"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-50-1-0"
         offset="1"
         style="stop-color:#ffffff;stop-opacity:0;" />
    </linearGradient>
    <linearGradient
       id="linearGradient4039-9-1"
       inkscape:collect="always">
      <stop
         id="stop4041-3-7"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-50-5"
         offset="1"
         style="stop-color:#ffffff;stop-opacity:0;" />
    </linearGradient>
    <linearGradient
       id="linearGradient4039-2"
       inkscape:collect="always">
      <stop
         id="stop4041-6"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-4"
         offset="1"
         style="stop-color:#ffffff;stop-opacity:0;" />
    </linearGradient>
    <linearGradient
       id="linearGradient4039-92-8">
      <stop
         id="stop4041-7-8"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-54-1"
         offset="1"
         style="stop-color:#fded7e;stop-opacity:1;" />
    </linearGradient>
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4670"
       xlink:href="#linearGradient4039-2"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,71.157321)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4672"
       xlink:href="#linearGradient4039-9-1"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,71.157321)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4674"
       xlink:href="#linearGradient4039-9-9-3"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient4676"
       xlink:href="#linearGradient4039-92-2-1"
       inkscape:collect="always" />
    <radialGradient
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1,0,0,0.41764431,0,116.73835)"
       r="149.20985"
       fy="72.676735"
       fx="413.48941"
       cy="72.676735"
       cx="413.48941"
       id="radialGradient6901"
       xlink:href="#linearGradient4039-92-8"
       inkscape:collect="always" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-92-2-1"
       id="radialGradient7141"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-9-9-3"
       id="radialGradient7148"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,71.157321)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-9-1"
       id="radialGradient7156"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,71.157321)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-92-8"
       id="radialGradient7163"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1,0,0,0.41764431,0,116.73835)"
       cx="413.48941"
       cy="72.676735"
       fx="413.48941"
       fy="72.676735"
       r="149.20985" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-2"
       id="radialGradient7170"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-2"
       id="radialGradient7178"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-2"
       id="radialGradient7181"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,104.17569,209.6328)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-92-8"
       id="radialGradient7185"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1,0,0,0.41764431,0,116.73835)"
       cx="413.48941"
       cy="72.676735"
       fx="413.48941"
       fy="72.676735"
       r="149.20985" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-92-8"
       id="radialGradient7188"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.33380903,0,0,0.1455441,60.974171,182.42958)"
       cx="407.75909"
       cy="72.676735"
       fx="407.75909"
       fy="72.676735"
       r="149.20985" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-9-9-3"
       id="radialGradient7191"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,71.157321)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-92-2-1"
       id="radialGradient7198"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.8625026,0.0253157,-0.00663133,0.48787413,-342.1322,98.430187)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient4039-92-2-1"
       id="radialGradient7201"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-74.00468,257.41818)"
       cx="401.59415"
       cy="81.790916"
       fx="401.59415"
       fy="81.790916"
       r="156.7888" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7206"
       id="radialGradient7212"
       cx="355.90097"
       cy="252.59717"
       fx="355.90097"
       fy="252.59717"
       r="98.967926"
       gradientTransform="matrix(1,0,0,0.21935035,0,260.16032)"
       gradientUnits="userSpaceOnUse" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7206"
       id="radialGradient7214"
       cx="355.22223"
       cy="85.433372"
       fx="355.22223"
       fy="85.433372"
       r="107.33466"
       gradientTransform="matrix(1,0,0,0.20231621,0,136.02534)"
       gradientUnits="userSpaceOnUse" />
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7206"
       id="radialGradient7216"
       cx="355.06808"
       cy="211.30595"
       fx="355.06808"
       fy="211.30595"
       r="49.81123"
       gradientTransform="matrix(1,0,0,0.43590382,0,142.09402)"
       gradientUnits="userSpaceOnUse" />
    <radialGradient
       r="149.20985"
       fy="72.676735"
       fx="407.75909"
       cy="72.676735"
       cx="407.75909"
       gradientTransform="matrix(0.33380903,0,0,0.1455441,60.974171,181.08636)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient7896"
       xlink:href="#linearGradient4039-92-8"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-74.00468,256.07493)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient7903"
       xlink:href="#linearGradient4039-92-2-1"
       inkscape:collect="always" />
    <radialGradient
       r="98.967926"
       fy="252.59717"
       fx="355.90097"
       cy="252.59717"
       cx="355.90097"
       gradientTransform="matrix(1,0,0,0.21935035,0,260.16032)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient7925"
       xlink:href="#linearGradient7206"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-74.00468,256.07493)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient7927"
       xlink:href="#linearGradient4039-92-2-1"
       inkscape:collect="always" />
    <radialGradient
       r="49.81123"
       fy="211.30595"
       fx="355.06808"
       cy="211.30595"
       cx="355.06808"
       gradientTransform="matrix(1,0,0,0.43590382,0,142.09402)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient7929"
       xlink:href="#linearGradient7206"
       inkscape:collect="always" />
    <radialGradient
       r="149.20985"
       fy="72.676735"
       fx="407.75909"
       cy="72.676735"
       cx="407.75909"
       gradientTransform="matrix(0.33380903,0,0,0.1455441,60.974171,181.08636)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient7931"
       xlink:href="#linearGradient4039-92-8"
       inkscape:collect="always" />
    <radialGradient
       r="107.33466"
       fy="85.433372"
       fx="355.22223"
       cy="85.433372"
       cx="355.22223"
       gradientTransform="matrix(1,0,0,0.20231621,0,136.02534)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient7933"
       xlink:href="#linearGradient7206"
       inkscape:collect="always" />
    <inkscape:perspective
       id="perspective7935-6"
       inkscape:persp3d-origin="13977.822 : 13716.066 : 1"
       inkscape:vp_z="14171.338 : 13569.215 : 1"
       inkscape:vp_y="28.717565 : 42.834234 : 0"
       inkscape:vp_x="13942.205 : 13747.331 : 1"
       sodipodi:type="inkscape:persp3d" />
    <radialGradient
       r="149.20985"
       fy="72.676735"
       fx="407.75909"
       cy="72.676735"
       cx="407.75909"
       gradientTransform="matrix(0.33380903,0,0,0.1455441,60.974171,181.08636)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient3644"
       xlink:href="#linearGradient4039-92-8-0"
       inkscape:collect="always" />
    <linearGradient
       id="linearGradient4039-92-8-0">
      <stop
         id="stop4041-7-8-5"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-54-1-7"
         offset="1"
         style="stop-color:#fded7e;stop-opacity:1;" />
    </linearGradient>
    <radialGradient
       r="49.81123"
       fy="211.30595"
       fx="355.06808"
       cy="211.30595"
       cx="355.06808"
       gradientTransform="matrix(1,0,0,0.43590382,0,142.09402)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient3685"
       xlink:href="#linearGradient7206"
       inkscape:collect="always" />
    <radialGradient
       r="149.20985"
       fy="72.676735"
       fx="407.75909"
       cy="72.676735"
       cx="407.75909"
       gradientTransform="matrix(0.33380903,0,0,0.1455441,60.974171,181.08636)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient3687"
       xlink:href="#linearGradient4039-92-8"
       inkscape:collect="always" />
    <radialGradient
       r="107.33466"
       fy="85.433372"
       fx="355.22223"
       cy="85.433372"
       cx="355.22223"
       gradientTransform="matrix(1,0,0,0.20231621,0,136.02534)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient3689"
       xlink:href="#linearGradient7206"
       inkscape:collect="always" />
    <radialGradient
       r="98.967926"
       fy="252.59717"
       fx="355.90097"
       cy="252.59717"
       cx="355.90097"
       gradientTransform="matrix(1,0,0,0.21935035,0,260.16032)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient3691"
       xlink:href="#linearGradient7206"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-74.00468,256.07493)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient3693"
       xlink:href="#linearGradient4039-92-2-1"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-79.555331,255.3811)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient3693-5"
       xlink:href="#linearGradient4039-92-2-1-7"
       inkscape:collect="always" />
    <linearGradient
       id="linearGradient4039-92-2-1-7">
      <stop
         id="stop4041-7-4-3-6"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-54-2-6-7"
         offset="1"
         style="stop-color:#ffb89b;stop-opacity:1;" />
    </linearGradient>
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-74.00468,256.07493)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient3693-4"
       xlink:href="#linearGradient4039-92-2-1-76"
       inkscape:collect="always" />
    <linearGradient
       id="linearGradient4039-92-2-1-76">
      <stop
         id="stop4041-7-4-3-3"
         offset="0"
         style="stop-color:#ffffff;stop-opacity:1;" />
      <stop
         id="stop4043-54-2-6-4"
         offset="1"
         style="stop-color:#b268ff;stop-opacity:1;" />
    </linearGradient>
    <marker
       inkscape:stockid="Arrow1Mend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Mend-1"
       style="overflow:visible">
      <path
         id="path4979-5"
         d="M 0,0 5,-5 -12.5,0 5,5 0,0 z"
         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt"
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         inkscape:connector-curvature="0" />
    </marker>
    <radialGradient
       r="49.81123"
       fy="211.30595"
       fx="355.06808"
       cy="211.30595"
       cx="355.06808"
       gradientTransform="matrix(1,0,0,0.43590382,0,142.09402)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient5942"
       xlink:href="#linearGradient7206"
       inkscape:collect="always" />
    <radialGradient
       r="149.20985"
       fy="72.676735"
       fx="407.75909"
       cy="72.676735"
       cx="407.75909"
       gradientTransform="matrix(0.33380903,0,0,0.1455441,60.974171,181.08636)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient5944"
       xlink:href="#linearGradient4039-92-8"
       inkscape:collect="always" />
    <radialGradient
       r="107.33466"
       fy="85.433372"
       fx="355.22223"
       cy="85.433372"
       cx="355.22223"
       gradientTransform="matrix(1,0,0,0.20231621,0,136.02534)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient5946"
       xlink:href="#linearGradient7206"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-74.00468,256.07493)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient5950"
       xlink:href="#linearGradient4039-92-2-1"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-74.00468,256.07493)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient5952"
       xlink:href="#linearGradient4039-92-2-1-76"
       inkscape:collect="always" />
    <radialGradient
       r="156.7888"
       fy="81.790916"
       fx="401.59415"
       cy="81.790916"
       cx="401.59415"
       gradientTransform="matrix(0.62172019,0.00882222,-0.0022136,0.17001836,-79.555331,255.3811)"
       gradientUnits="userSpaceOnUse"
       id="radialGradient5954"
       xlink:href="#linearGradient4039-92-2-1-7"
       inkscape:collect="always" />
    <marker
       inkscape:stockid="Arrow1Mend"
       orient="auto"
       refY="0"
       refX="0"
       id="Arrow1Mend-7"
       style="overflow:visible">
      <path
         id="path4979-3"
         d="M 0,0 5,-5 -12.5,0 5,5 0,0 z"
         style="fill-rule:evenodd;stroke:#000000;stroke-width:1pt"
         transform="matrix(-0.4,0,0,-0.4,-4,0)"
         inkscape:connector-curvature="0" />
    </marker>
    <radialGradient
       inkscape:collect="always"
       xlink:href="#linearGradient7206"
       id="radialGradient12930"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1,0,0,0.21935035,0,260.16032)"
       cx="355.90097"
       cy="252.59717"
       fx="355.90097"
       fy="252.59717"
       r="98.967926" />
  </defs>
  <metadata
     id="metadata3177">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     transform="translate(37907.094,21063.344)"
     id="layer1"
     inkscape:groupmode="layer"
     inkscape:label="Layer 1">
    <g
       id="g3537">
      <g
         transform="matrix(40.976107,0,0,40.976107,-14178.239,-813.35311)"
         id="g4347">
        <path
           sodipodi:nodetypes="cc"
           inkscape:connector-curvature="3"
           inkscape:connector-type="polyline"
           id="path4448"
           d="M 0,0 0,0"
           style="opacity:0.98999999;fill:none;stroke:#000000;stroke-width:5.69999981;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline" />
        <path
           sodipodi:nodetypes="cc"
           inkscape:connector-curvature="3"
           inkscape:connector-type="polyline"
           id="path4452"
           d="M 0,0 0,0"
           style="opacity:0.98999999;fill:none;stroke:#000000;stroke-width:5.69999981;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline" />
        <path
           inkscape:connector-curvature="3"
           inkscape:connector-type="polyline"
           id="path4454"
           d="M 0,0 0,0"
           style="opacity:0.98999999;fill:none;stroke:#000000;stroke-width:5.69999981;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline" />
        <path
           sodipodi:nodetypes="cc"
           inkscape:connector-curvature="3"
           inkscape:connector-type="polyline"
           id="path4456"
           d="M 0,0 0,0"
           style="opacity:0.98999999;fill:none;stroke:#000000;stroke-width:5.69999981;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;display:inline" />
        <g
           transform="translate(-187.15366,-187.49521)"
           id="g4426"
           style="opacity:0.98999999;display:inline" />
      </g>
      <text
         sodipodi:linespacing="125%"
         id="text4387"
         y="-16441.508"
         x="-40071.621"
         style="font-size:6079.42041016px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
         xml:space="preserve"><tspan
           y="-16441.508"
           x="-40071.621"
           id="tspan4389"
           sodipodi:role="line">L1/L2 integration</tspan></text>
      <rect
         ry="1582.74"
         y="-24936.303"
         x="-44613.574"
         height="35698.395"
         width="60870.676"
         id="rect4393"
         style="fill:none;stroke:#000000;stroke-width:529.32818604;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         ry="1357.4872"
         y="-8888.7969"
         x="-20260.475"
         height="15585.2"
         width="24185.285"
         id="rect4393-5"
         style="fill:none;stroke:#000000;stroke-width:394.93630981;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <rect
         ry="1.2060663"
         y="-10103.155"
         x="-32450.797"
         height="19569.553"
         width="36545.117"
         id="rect5602"
         style="fill:none;stroke:#000000;stroke-width:106.40365601;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
      <g
         transform="translate(1362.5864,0)"
         id="g5794">
        <path
           sodipodi:nodetypes="cccccc"
           inkscape:connector-curvature="0"
           id="path3577"
           d="m -10013.011,-5028.2904 -4128.332,1987.1052 4235.2309,2181.9311 -4703.5279,2031.0687 4918.1449,2350.0035 -4254.7509,-5533.3203"
           style="fill:none;stroke:#000000;stroke-width:172.10636902;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
        <g
           transform="matrix(52.487878,0,0,52.487878,-28821.26,-14034.519)"
           id="g7910">
          <rect
             ry="7.7227364"
             y="230.35442"
             x="344.64047"
             height="43.08474"
             width="99.281387"
             id="rect3179-1-6"
             style="opacity:0.98999999;fill:url(#radialGradient5942);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.34106964;stroke-opacity:1" />
          <text
             sodipodi:linespacing="125%"
             id="text3108-3"
             y="258.98322"
             x="358.73715"
             style="font-size:19.00854301px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;opacity:0.98999999;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
             xml:space="preserve"><tspan
               y="258.98322"
               x="358.73715"
               id="tspan3110-8"
               sodipodi:role="line">farm-lib</tspan></text>
        </g>
        <g
           transform="matrix(52.487878,0,0,52.487878,-28821.26,-13984.634)"
           id="g7898">
          <rect
             ry="7.7227364"
             y="188.7196"
             x="187.23213"
             height="43.08474"
             width="99.281387"
             id="rect3179-1-6-64"
             style="opacity:0.98009997;fill:url(#radialGradient5944);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.34106964;stroke-opacity:1" />
          <text
             sodipodi:linespacing="125%"
             id="text3108"
             y="217.3484"
             x="216.36024"
             style="font-size:19.00854301px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;opacity:0.98999999;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
             xml:space="preserve"><tspan
               y="217.3484"
               x="216.36024"
               id="tspan3110"
               sodipodi:role="line">farm</tspan></text>
        </g>
        <g
           transform="matrix(52.487878,0,0,52.487878,-28821.26,-14034.52)"
           id="g7920">
          <rect
             style="opacity:0.98999999;fill:url(#radialGradient5946);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.34633911;stroke-opacity:1"
             id="rect3179-1-6-6"
             width="214.32298"
             height="43.084743"
             x="344.65878"
             y="148.98302"
             ry="7.7227364" />
          <text
             xml:space="preserve"
             style="font-size:19.00854301px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;opacity:0.98999999;fill:#000000;fill-opacity:1;stroke:none;display:inline;font-family:Sans"
             x="359.75378"
             y="175.76944"
             id="text3108-3-4"
             sodipodi:linespacing="125%"><tspan
               sodipodi:role="line"
               id="tspan3110-8-9"
               x="359.75378"
               y="175.76944">farm-networking-lib</tspan></text>
        </g>
        <g
           transform="matrix(52.487878,0,0,52.487878,-28821.26,-14034.519)"
           id="g7915">
          <rect
             ry="7.7227364"
             y="311.71893"
             x="344.61142"
             height="43.084743"
             width="197.6033"
             id="rect3179-1-6-6-9"
             style="opacity:0.98009997;fill:url(#radialGradient12930);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.33255559;stroke-opacity:1" />
          <text
             sodipodi:linespacing="125%"
             id="text3108-3-4-8"
             y="338.50537"
             x="358.98917"
             style="font-size:19.00854301px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;opacity:0.98999999;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
             xml:space="preserve"><tspan
               y="338.50537"
               x="358.98917"
               id="tspan3110-8-9-1"
               sodipodi:role="line">trigger-algorithms</tspan></text>
        </g>
        <g
           transform="matrix(52.487878,0,0,52.487878,-28850.394,-13984.632)"
           id="g7905">
          <rect
             ry="7.7227364"
             y="270.08835"
             x="166.46011"
             height="43.08474"
             width="120.44534"
             id="rect3179-1-6-64-1"
             style="opacity:0.98009997;fill:url(#radialGradient5950);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.34106964;stroke-opacity:1" />
          <text
             sodipodi:linespacing="125%"
             id="text3175"
             y="296.87479"
             x="173.38776"
             style="font-size:19.00854301px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;opacity:0.98999999;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
             xml:space="preserve"><tspan
               y="296.87479"
               x="173.38776"
               id="tspan3177"
               sodipodi:role="line">trigger-test</tspan></text>
        </g>
        <rect
           style="fill:none;stroke:#000000;stroke-width:5.40006065;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
           id="rect6174"
           width="746.84589"
           height="448.51157"
           x="-17104.943"
           y="-2378.1633"
           ry="20.21929" />
        <g
           transform="matrix(17.450898,0,0,17.450898,-19401.68,-11224.128)"
           id="g4206">
          <text
             sodipodi:linespacing="150%"
             id="text4459"
             y="515.69537"
             x="138.72548"
             style="font-size:2.16349387px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;opacity:0.98999999;fill:#000000;fill-opacity:1;stroke:none;display:inline;font-family:Sans;-inkscape-font-specification:Sans"
             xml:space="preserve"><tspan
               id="tspan4465"
               y="515.69537"
               x="138.72548"
               sodipodi:role="line">L0 data collection via</tspan><tspan
               y="518.94061"
               x="138.72548"
               sodipodi:role="line"
               id="tspan5416">  Multi Event Packets (MEPs)</tspan><tspan
               id="tspan4472"
               y="522.18585"
               x="138.72548"
               sodipodi:role="line">Eventbuilding <tspan
   style="font-size:1.47938097px"
   id="tspan5600">(Concat MEP fragments)</tspan></tspan><tspan
               style="font-size:2.16349387px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans Bold"
               id="tspan4474"
               y="525.43109"
               x="138.72548"
               sodipodi:role="line">L1 execution</tspan><tspan
               style="font-size:2.16349387px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
               y="528.67633"
               x="138.72548"
               sodipodi:role="line"
               id="tspan4101" /></text>
          <g
             id="g4005"
             transform="translate(0,0.97215076)">
            <g
               transform="translate(-0.17603653,3.2272597)"
               id="g3955">
              <path
                 sodipodi:type="arc"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 id="path3935-6"
                 sodipodi:cx="14146.555"
                 sodipodi:cy="18650.055"
                 sodipodi:rx="17.67767"
                 sodipodi:ry="17.125242"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)" />
              <path
                 sodipodi:type="arc"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 id="path3935"
                 sodipodi:cx="14146.555"
                 sodipodi:cy="18650.055"
                 sodipodi:rx="17.67767"
                 sodipodi:ry="17.125242"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)" />
            </g>
            <g
               id="g3955-6"
               transform="translate(-0.17603653,6.4587247)">
              <path
                 sodipodi:type="arc"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 id="path3935-6-5"
                 sodipodi:cx="14146.555"
                 sodipodi:cy="18650.055"
                 sodipodi:rx="17.67767"
                 sodipodi:ry="17.125242"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)" />
              <path
                 sodipodi:type="arc"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 id="path3935-2"
                 sodipodi:cx="14146.555"
                 sodipodi:cy="18650.055"
                 sodipodi:rx="17.67767"
                 sodipodi:ry="17.125242"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)" />
            </g>
            <g
               id="g3955-9"
               transform="translate(-0.17603653,-3.1996678)">
              <path
                 sodipodi:type="arc"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 id="path3935-6-7"
                 sodipodi:cx="14146.555"
                 sodipodi:cy="18650.055"
                 sodipodi:rx="17.67767"
                 sodipodi:ry="17.125242"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)" />
              <path
                 sodipodi:type="arc"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 id="path3935-47"
                 sodipodi:cx="14146.555"
                 sodipodi:cy="18650.055"
                 sodipodi:rx="17.67767"
                 sodipodi:ry="17.125242"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)" />
            </g>
          </g>
        </g>
        <g
           transform="matrix(17.450898,0,0,17.450898,-19330.143,-11188.905)"
           id="g4190">
          <text
             xml:space="preserve"
             style="font-size:2.16350603px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
             x="181.37288"
             y="513.46722"
             id="text4112"
             sodipodi:linespacing="150%"><tspan
               sodipodi:role="line"
               id="tspan4114"
               x="181.37288"
               y="513.46722">LKr data request</tspan><tspan
               sodipodi:role="line"
               x="181.37288"
               y="516.71246"
               id="tspan4116"
               style="font-weight:bold;-inkscape-font-specification:Sans Bold">L2 execution</tspan><tspan
               sodipodi:role="line"
               x="181.37288"
               y="519.95776"
               id="tspan4118">Sending accepted events </tspan><tspan
               sodipodi:role="line"
               x="181.37288"
               y="523.203"
               id="tspan4120">to the mergers</tspan></text>
          <g
             id="g3955-5"
             transform="translate(42.383519,-4.5079375)">
            <path
               sodipodi:type="arc"
               style="fill:#000000;fill-opacity:1;stroke:none"
               id="path3935-6-9"
               sodipodi:cx="14146.555"
               sodipodi:cy="18650.055"
               sodipodi:rx="17.67767"
               sodipodi:ry="17.125242"
               d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
               transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)" />
            <path
               sodipodi:type="arc"
               style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
               id="path3935-4"
               sodipodi:cx="14146.555"
               sodipodi:cy="18650.055"
               sodipodi:rx="17.67767"
               sodipodi:ry="17.125242"
               d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
               transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)" />
          </g>
          <g
             id="g3955-5-5"
             transform="translate(42.383519,-1.2389101)">
            <path
               sodipodi:type="arc"
               style="fill:#000000;fill-opacity:1;stroke:none"
               id="path3935-6-9-9"
               sodipodi:cx="14146.555"
               sodipodi:cy="18650.055"
               sodipodi:rx="17.67767"
               sodipodi:ry="17.125242"
               d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
               transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)" />
            <path
               sodipodi:type="arc"
               style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
               id="path3935-4-1"
               sodipodi:cx="14146.555"
               sodipodi:cy="18650.055"
               sodipodi:rx="17.67767"
               sodipodi:ry="17.125242"
               d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
               transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)" />
          </g>
          <g
             id="g3955-5-7"
             transform="translate(42.383519,2.0301174)">
            <path
               sodipodi:type="arc"
               style="fill:#000000;fill-opacity:1;stroke:none"
               id="path3935-6-9-4"
               sodipodi:cx="14146.555"
               sodipodi:cy="18650.055"
               sodipodi:rx="17.67767"
               sodipodi:ry="17.125242"
               d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
               transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)" />
            <path
               sodipodi:type="arc"
               style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
               id="path3935-4-15"
               sodipodi:cx="14146.555"
               sodipodi:cy="18650.055"
               sodipodi:rx="17.67767"
               sodipodi:ry="17.125242"
               d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
               transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)" />
          </g>
        </g>
        <rect
           style="fill:none;stroke:#000000;stroke-width:5.40006065;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
           id="rect6174-5"
           width="746.84589"
           height="448.51157"
           x="-16314.813"
           y="-2378.1633"
           ry="20.21929" />
        <g
           transform="matrix(0.87948816,0,0,0.87948816,-868.62396,-0.875693)"
           id="g6015">
          <g
             id="g4190-5"
             transform="matrix(24.616876,0,0,24.616876,-12899.169,-12724.196)">
            <text
               sodipodi:linespacing="150%"
               id="text4112-3"
               y="513.46722"
               x="181.37288"
               style="font-size:2.16350603px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
               xml:space="preserve"><tspan
                 y="513.46722"
                 x="181.37288"
                 id="tspan4114-1"
                 sodipodi:role="line">MEP.h</tspan><tspan
                 id="tspan4596"
                 y="516.71246"
                 x="181.37288"
                 sodipodi:role="line">MEPFragment.h</tspan><tspan
                 style="font-weight:bold;-inkscape-font-specification:Sans Bold"
                 id="tspan4116-6"
                 y="519.95776"
                 x="181.37288"
                 sodipodi:role="line">Event.h</tspan><tspan
                 id="tspan4120-5"
                 y="523.203"
                 x="181.37288"
                 sodipodi:role="line" /></text>
            <g
               transform="translate(42.383519,-4.5079375)"
               id="g3955-5-4">
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-6-9-8"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 sodipodi:type="arc" />
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-4-6"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 sodipodi:type="arc" />
            </g>
            <g
               transform="translate(42.383519,-1.2389101)"
               id="g3955-5-5-8">
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-6-9-9-8"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 sodipodi:type="arc" />
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-4-1-0"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 sodipodi:type="arc" />
            </g>
            <g
               transform="translate(42.383519,2.0301174)"
               id="g3955-5-7-1">
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-6-9-4-9"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 sodipodi:type="arc" />
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-4-15-1"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 sodipodi:type="arc" />
            </g>
          </g>
        </g>
        <rect
           style="fill:none;stroke:#000000;stroke-width:7.12867641;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
           id="rect6174-5-7-4"
           width="949.36646"
           height="614.88104"
           x="-8587.2227"
           y="-330.22992"
           ry="27.719372" />
        <g
           transform="translate(384.83031,0)"
           id="g5956">
          <rect
             style="fill:none;stroke:#000000;stroke-width:4.94942379;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
             id="rect6915"
             width="852.7149"
             height="377.57031"
             x="-18650.799"
             y="1953.4795"
             ry="21.936522" />
          <g
             transform="matrix(15.690923,0,0,15.690923,-20214.214,-8764.707)"
             id="g4624">
            <text
               sodipodi:linespacing="150%"
               id="text6903"
               y="691.05212"
               x="108.04457"
               style="font-size:2.52345824px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
               xml:space="preserve"><tspan
                 style="font-size:2.16349387px"
                 y="691.05212"
                 x="108.04457"
                 id="tspan6905"
                 sodipodi:role="line">Input: Header and <tspan
   id="tspan4746"
   style="font-weight:bold;-inkscape-font-specification:Sans Bold">binary data files</tspan></tspan><tspan
                 style="font-size:2.16349387px"
                 id="tspan6909"
                 y="694.29736"
                 x="108.04457"
                 sodipodi:role="line">Creates MEPs based on binary files</tspan><tspan
                 style="font-size:2.16349387px"
                 y="697.5426"
                 x="108.04457"
                 sodipodi:role="line"
                 id="tspan4598">Basic Eventbuilding (no LKr request)</tspan><tspan
                 id="tspan4680"
                 style="font-size:2.16349387px;font-weight:bold;-inkscape-font-specification:Sans Bold"
                 y="700.78784"
                 x="108.04457"
                 sodipodi:role="line">Executes L1 and L2</tspan></text>
            <g
               id="g4005-5"
               transform="translate(-30.668905,176.28008)">
              <g
                 id="g3955-1"
                 transform="translate(-0.12004826,0.04761271)">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-2"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-0"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
              <g
                 transform="translate(-0.12004826,3.2948251)"
                 id="g3955-6-4">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-5-3"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-2-9"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
              <g
                 transform="translate(-0.12004826,-3.1995996)"
                 id="g3955-9-7">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-7-8"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-47-9"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
              <g
                 transform="translate(-0.12004826,6.5420374)"
                 id="g3955-6-4-3">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-5-3-0"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-2-9-5"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
            </g>
          </g>
          <rect
             style="fill:none;stroke:#000000;stroke-width:4.94942379;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
             id="rect6915-76"
             width="852.7149"
             height="377.57031"
             x="-16876.168"
             y="1953.5547"
             ry="21.936522" />
          <g
             transform="matrix(15.690923,0,0,15.690923,-18439.58,-8720.5637)"
             id="g4624-5">
            <text
               sodipodi:linespacing="150%"
               id="text6903-1"
               y="691.05212"
               x="108.04457"
               style="font-size:2.52345824px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
               xml:space="preserve"><tspan
                 style="font-size:2.16349387px"
                 y="691.05212"
                 x="108.04457"
                 id="tspan6905-9"
                 sodipodi:role="line">Output files (Raw events?)</tspan><tspan
                 id="tspan4680-9"
                 style="font-size:2.16349387px;font-weight:normal;-inkscape-font-specification:Sans"
                 y="694.29736"
                 x="108.04457"
                 sodipodi:role="line">Performance statistics</tspan><tspan
                 id="tspan4768"
                 style="font-size:2.16349387px;font-weight:bold;-inkscape-font-specification:Sans Bold"
                 y="697.5426"
                 x="108.04457"
                 sodipodi:role="line">Raw data generators based on MC</tspan><tspan
                 style="font-size:2.16349387px;font-weight:bold;-inkscape-font-specification:Sans Bold"
                 y="700.78784"
                 x="108.04457"
                 sodipodi:role="line"
                 id="tspan13002">Algorithms!</tspan></text>
            <g
               id="g4005-5-3"
               transform="translate(-30.668905,176.28008)">
              <g
                 id="g3955-1-9"
                 transform="translate(-0.12004826,-0.01185823)">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-2-6"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-0-6"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
              <g
                 transform="translate(-0.12004826,3.17588)"
                 id="g3955-6-4-0">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-5-3-3"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-2-9-9"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
              <g
                 transform="translate(-0.12004826,-3.1995964)"
                 id="g3955-9-7-7">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-7-8-9"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-47-9-8"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
              <g
                 transform="translate(-0.12004826,6.3636182)"
                 id="g3955-6-4-0-7">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-5-3-3-0"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-2-9-9-1"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
            </g>
          </g>
          <text
             sodipodi:linespacing="125%"
             id="text4759"
             y="2021.5205"
             x="-16776.039"
             style="font-size:18.57028389px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
             xml:space="preserve"><tspan
               style="font-size:33.42650986px;font-weight:bold;-inkscape-font-specification:Sans Bold"
               y="2021.5205"
               x="-16776.039"
               id="tspan4761"
               sodipodi:role="line">Still Missing</tspan></text>
          <rect
             style="fill:none;stroke:#000000;stroke-width:4.94942379;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
             id="rect6915-76-7"
             width="852.7149"
             height="377.57031"
             x="-17762.723"
             y="1951.813"
             ry="21.936522" />
          <g
             transform="matrix(15.690923,0,0,15.690923,-19326.138,-8731.5917)"
             id="g4624-5-2">
            <text
               sodipodi:linespacing="150%"
               id="text6903-1-7"
               y="691.05212"
               x="108.04457"
               style="font-size:2.52345824px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
               xml:space="preserve"><tspan
                 id="tspan4768-6"
                 style="font-size:2.16349387px;font-weight:normal;-inkscape-font-specification:Sans"
                 y="691.05212"
                 x="108.04457"
                 sodipodi:role="line">git (versioning)</tspan><tspan
                 style="font-size:2.16349387px;font-weight:normal;-inkscape-font-specification:Sans"
                 y="694.29736"
                 x="108.04457"
                 sodipodi:role="line"
                 id="tspan12942">C++11 (gcc&gt;4.6, icc&gt;12.0)</tspan><tspan
                 id="tspan4962"
                 style="font-size:2.16349387px;font-weight:normal;-inkscape-font-specification:Sans"
                 y="697.5426"
                 x="108.04457"
                 sodipodi:role="line">eclipse (building)</tspan></text>
            <g
               id="g4005-5-3-6"
               transform="translate(-30.668905,176.28008)">
              <g
                 id="g3955-1-9-8"
                 transform="translate(-0.12004826,0.04761271)">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-2-6-8"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-0-6-9"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
              <g
                 transform="translate(-0.12004826,3.2948251)"
                 id="g3955-6-4-0-3">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-5-3-3-9"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-2-9-9-4"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
              <g
                 transform="translate(-0.12004826,-3.1995996)"
                 id="g3955-9-7-7-1">
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-6-7-8-9-9"
                   style="fill:#000000;fill-opacity:1;stroke:none"
                   sodipodi:type="arc" />
                <path
                   transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                   d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                   sodipodi:ry="17.125242"
                   sodipodi:rx="17.67767"
                   sodipodi:cy="18650.055"
                   sodipodi:cx="14146.555"
                   id="path3935-47-9-8-6"
                   style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                   sodipodi:type="arc" />
              </g>
            </g>
          </g>
          <text
             sodipodi:linespacing="125%"
             id="text4759-0"
             y="2019.7783"
             x="-17662.592"
             style="font-size:18.57028389px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
             xml:space="preserve"><tspan
               style="font-size:33.42650986px;font-weight:bold;-inkscape-font-specification:Sans Bold"
               y="2019.7783"
               x="-17662.592"
               id="tspan4761-9"
               sodipodi:role="line">Only view dependencies</tspan></text>
          <g
             transform="translate(-374.34321,-23.35816)"
             id="g12962">
            <text
               sodipodi:linespacing="125%"
               id="text12944"
               y="2302.406"
               x="-17232.023"
               style="font-size:24px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
               xml:space="preserve"><tspan
                 style="font-size:35px"
                 y="2302.406"
                 x="-17232.023"
                 id="tspan12946"
                 sodipodi:role="line">No need to run at CERN</tspan></text>
            <g
               transform="matrix(0.60215552,0,0,0.60215552,-6833.2817,908.94292)"
               id="g12958">
              <path
                 style="fill:none;stroke:#000000;stroke-width:3.72816396;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"
                 id="path12954"
                 d="m -17348.23,2287.9998 c 3.291,1.3258 6.879,1.79 10.351,2.3977 10.834,1.5753 21.801,1.8565 32.73,2.0582 4.264,0.069 8.518,-0.1577 12.768,-0.4631 0,0 -2.426,1.7824 -2.426,1.7824 l 0,0 c -4.105,0.132 -8.211,0.2073 -12.318,0.1095 -11.055,-0.3113 -22.132,-0.566 -33.13,-1.815 -3.723,-0.4926 -7.513,-0.8707 -11.12,-1.9629 0,0 3.145,-2.1068 3.145,-2.1068 z"
                 inkscape:connector-curvature="0" />
              <path
                 style="fill:none;stroke:#000000;stroke-width:3.72816396;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"
                 id="path12956"
                 d="m -17305.567,2277.6746 c 2.648,1.8417 5.381,3.5597 8.093,5.3044 5.275,3.4443 10.732,6.5934 16.133,9.8323 0.43,0.2914 1.677,0.9813 1.968,1.6222 0.305,0.6735 -0.273,1.203 -0.777,1.5123 -3.864,2.3715 -3.473,2.1006 -6.684,3.2211 -5.888,1.8653 -11.622,4.1766 -17.472,6.1544 -1.199,0.4055 -2.41,0.7748 -3.615,1.1622 -2.566,0.8146 -5.162,1.5244 -7.773,2.1767 0,0 2.65,-2.0207 2.65,-2.0207 l 0,0 c 2.494,-0.5514 4.971,-1.1708 7.412,-1.9293 1.186,-0.3764 2.378,-0.7332 3.558,-1.1294 5.974,-2.0056 11.819,-4.379 17.786,-6.405 3.388,-1.3215 2.63,-1.2205 0.822,0.1029 -0.235,0.1718 1.136,-0.4244 1.004,-1.005 -0.147,-0.6507 -1.301,-1.4042 -1.645,-1.6856 -5.16,-3.5764 -10.607,-6.7054 -16.002,-9.9084 -2.853,-1.6819 -5.698,-3.3829 -8.615,-4.9531 0,0 3.157,-2.052 3.157,-2.052 z"
                 inkscape:connector-curvature="0" />
            </g>
          </g>
        </g>
        <path
           sodipodi:nodetypes="cc"
           inkscape:connector-curvature="0"
           id="path4964"
           d="m -16195.386,4836.6294 5267.929,-1214.9898"
           style="fill:none;stroke:#000000;stroke-width:72.83547211;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker-end:url(#Arrow1Mend)" />
        <text
           sodipodi:linespacing="125%"
           id="text5410"
           y="5372.1064"
           x="-18803.385"
           style="font-size:68.73887634px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
           xml:space="preserve"><tspan
             id="tspan5414"
             style="font-size:859.23590088px;text-align:center;text-anchor:middle"
             y="5372.1064"
             x="-18803.385"
             sodipodi:role="line">Your task!</tspan></text>
        <path
           style="fill:none;stroke:#000000;stroke-width:72.83547211;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker-end:url(#Arrow1Mend)"
           d="m -24706.517,1322.4459 4534.008,0"
           id="path5584"
           inkscape:connector-curvature="0" />
        <path
           style="fill:none;stroke:#000000;stroke-width:72.83547211;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker-end:url(#Arrow1Mend)"
           d="m -25434.872,-2948.429 6391.313,0"
           id="path5584-7"
           inkscape:connector-curvature="0"
           sodipodi:nodetypes="cc" />
        <g
           transform="matrix(52.487878,0,0,52.487878,-40337.434,-18255.507)"
           id="g7905-1">
          <rect
             ry="7.7227364"
             y="270.08835"
             x="166.46011"
             height="43.08474"
             width="120.44534"
             id="rect3179-1-6-64-1-0"
             style="opacity:0.98009997;fill:url(#radialGradient5952);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.34106964;stroke-opacity:1" />
          <text
             sodipodi:linespacing="125%"
             id="text3175-1"
             y="298.71716"
             x="186.01582"
             style="font-size:19.00854301px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;opacity:0.98999999;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
             xml:space="preserve"><tspan
               y="298.71716"
               x="186.01582"
               id="tspan3177-5"
               sodipodi:role="line">detector</tspan></text>
        </g>
        <g
           transform="matrix(52.487878,0,0,52.487878,-40007.674,-14530.899)"
           id="g7905-9">
          <rect
             ry="7.7227364"
             y="269.39453"
             x="160.90947"
             height="65.287354"
             width="130.85281"
             id="rect3179-1-6-64-1-1"
             style="opacity:0.98009997;fill:url(#radialGradient5954);fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:0.34106964;stroke-opacity:1" />
          <text
             sodipodi:linespacing="125%"
             id="text3175-2"
             y="295.40192"
             x="225.82076"
             style="font-size:19.00854301px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;opacity:0.98999999;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
             xml:space="preserve"><tspan
               y="295.40192"
               x="225.82076"
               id="tspan3177-2"
               sodipodi:role="line"
               style="text-align:center;text-anchor:middle">Raw data</tspan><tspan
               y="319.1626"
               x="225.82076"
               sodipodi:role="line"
               id="tspan5582"
               style="text-align:center;text-anchor:middle">generator</tspan></text>
        </g>
        <rect
           style="fill:none;stroke:#000000;stroke-width:4.94942379;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
           id="rect6915-1"
           width="852.7149"
           height="377.57031"
           x="-28556.141"
           y="2562.8396"
           ry="21.936522" />
        <g
           transform="matrix(15.690923,0,0,15.690923,-30122.043,-8197.3473)"
           id="g4624-2">
          <text
             sodipodi:linespacing="150%"
             id="text6903-9"
             y="691.05212"
             x="104.09325"
             style="font-size:2.52345824px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
             xml:space="preserve"><tspan
               style="font-size:2.16349387px"
               y="691.05212"
               x="104.09325"
               sodipodi:role="line"
               id="tspan3395">Raw data in same format as sent by </tspan><tspan
               style="font-size:2.16349387px"
               y="694.29736"
               x="104.09325"
               sodipodi:role="line"
               id="tspan13032">    the electronic boards</tspan><tspan
               style="font-size:2.16349387px"
               id="tspan6909-7"
               y="697.5426"
               x="104.09325"
               sodipodi:role="line">Basic implementation for STRAWs exist</tspan><tspan
               style="font-size:2.16349387px"
               y="700.78784"
               x="104.09325"
               sodipodi:role="line"
               id="tspan3401" /><tspan
               id="tspan4680-7"
               style="font-size:2.16349387px;font-weight:bold;-inkscape-font-specification:Sans Bold"
               y="704.03308"
               x="104.09325"
               sodipodi:role="line">Format documentation:</tspan><tspan
               style="font-size:1.52954674px;font-weight:normal;-inkscape-font-specification:Sans"
               y="706.52008"
               x="104.09325"
               sodipodi:role="line"
               id="tspan3399">http://github.com/NA62/na62-trigger-test/wiki/InputFileFormat</tspan></text>
          <g
             id="g4005-5-6"
             transform="translate(-34.620233,176.28008)">
            <g
               transform="translate(-0.12004826,3.3282002)"
               id="g3955-6-4-5">
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-6-5-3-07"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 sodipodi:type="arc" />
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-2-9-8"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 sodipodi:type="arc" />
            </g>
            <g
               transform="translate(-0.12004826,-3.1996334)"
               id="g3955-9-7-5">
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-6-7-8-7"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 sodipodi:type="arc" />
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-47-9-2"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 sodipodi:type="arc" />
            </g>
            <g
               transform="translate(-0.12004826,9.8560338)"
               id="g3955-6-4-3-4">
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.77395,-34.641388)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-6-5-3-0-7"
                 style="fill:#000000;fill-opacity:1;stroke:none"
                 sodipodi:type="arc" />
              <path
                 transform="matrix(0.02958762,0,0,0.02958762,-280.84272,-34.677449)"
                 d="m 14164.232,18650.055 c 0,9.458 -7.914,17.125 -17.677,17.125 -9.763,0 -17.678,-7.667 -17.678,-17.125 0,-9.458 7.915,-17.126 17.678,-17.126 9.763,0 17.677,7.668 17.677,17.126 z"
                 sodipodi:ry="17.125242"
                 sodipodi:rx="17.67767"
                 sodipodi:cy="18650.055"
                 sodipodi:cx="14146.555"
                 id="path3935-2-9-5-9"
                 style="fill:#333333;fill-opacity:1;stroke:#000000;stroke-opacity:1"
                 sodipodi:type="arc" />
            </g>
          </g>
        </g>
        <rect
           ry="38.359924"
           y="-5284.4341"
           x="-33009.754"
           height="11221.26"
           width="20820.234"
           id="rect3963"
           style="fill:none;stroke:#000000;stroke-width:89.4154129;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
        <path
           sodipodi:nodetypes="cc"
           inkscape:connector-curvature="0"
           id="path4964-2"
           d="M -21757.602,4609.2675 -24572.499,2918.2377"
           style="fill:none;stroke:#000000;stroke-width:72.83547211;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;marker-end:url(#Arrow1Mend)" />
        <text
           sodipodi:linespacing="125%"
           id="text5895"
           y="12916.746"
           x="-40967.566"
           style="font-size:1476.70275879px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
           xml:space="preserve"><tspan
             y="12916.746"
             x="-40967.566"
             id="tspan5897"
             sodipodi:role="line">More documentation:</tspan><tspan
             id="tspan5899"
             y="14762.625"
             x="-40967.566"
             sodipodi:role="line">https://github.com/NA62/na62-trigger-algorithms/wiki/GettingStarted</tspan><tspan
             id="tspan5901"
             y="16608.504"
             x="-40967.566"
             sodipodi:role="line" /><tspan
             id="tspan5903"
             y="18454.381"
             x="-40967.566"
             sodipodi:role="line">24h-Hotline:</tspan><tspan
             id="tspan5905"
             y="20300.26"
             x="-40967.566"
             sodipodi:role="line">kunzej@cern.ch</tspan></text>
        <rect
           ry="307.36011"
           y="-9371.0117"
           x="-45203.418"
           height="33839.918"
           width="59791.742"
           id="rect5907"
           style="fill:none;stroke:#000000;stroke-width:239.21066284;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" />
        <g
           transform="matrix(0.69839967,0,0,0.69839967,220.89604,4227.5071)"
           id="g6015-9">
          <g
             id="g4190-5-2"
             transform="matrix(24.616876,0,0,24.616876,-12899.169,-12724.196)">
            <text
               sodipodi:linespacing="150%"
               id="text4112-3-0"
               y="511.67197"
               x="167.85693"
               style="font-size:2.06063843px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
               xml:space="preserve"><tspan
                 id="tspan4120-5-5"
                 y="511.67197"
                 x="167.85693"
                 sodipodi:role="line"
                 style="font-weight:bold;-inkscape-font-specification:Sans Bold">Your code comes here:</tspan><tspan
                 y="514.76294"
                 x="167.85693"
                 sodipodi:role="line"
                 id="tspan10338" /><tspan
                 y="517.85388"
                 x="167.85693"
                 sodipodi:role="line"
                 id="tspan10340">L1TriggerProcessor.h:</tspan><tspan
                 y="520.94482"
                 x="167.85693"
                 sodipodi:role="line"
                 id="tspan10336">uint16_t <tspan
   style="font-weight:bold;-inkscape-font-specification:Sans Bold"
   id="tspan12932">compute</tspan>(const <tspan
   style="font-weight:bold;-inkscape-font-specification:Sans Bold"
   id="tspan12934">Event</tspan>* event);</tspan><tspan
                 y="524.03577"
                 x="167.85693"
                 sodipodi:role="line"
                 id="tspan12924"></tspan><tspan
                 y="527.12677"
                 x="167.85693"
                 sodipodi:role="line"
                 id="tspan12928">L2TriggerProcessor.h:</tspan><tspan
                 y="530.21771"
                 x="167.85693"
                 sodipodi:role="line"
                 id="tspan12926">uint8_t <tspan
   style="font-weight:bold;-inkscape-font-specification:Sans Bold"
   id="tspan12936">compute</tspan>(const <tspan
   style="font-weight:bold;-inkscape-font-specification:Sans Bold"
   id="tspan12938">Event</tspan>* event);</tspan><tspan
                 y="533.30865"
                 x="167.85693"
                 sodipodi:role="line"
                 id="tspan10334" /></text>
          </g>
        </g>
        <rect
           style="fill:none;stroke:#000000;stroke-width:6.03095579;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none"
           id="rect6174-5-7-4-2"
           width="803.17676"
           height="520.19763"
           x="-5949.0371"
           y="4032.5571"
           ry="23.45096" />
        <rect
           style="fill:none;stroke:#000000;stroke-width:64.37197113;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0"
           id="rect11630"
           width="12374.597"
           height="8503.1875"
           x="-11798.696"
           y="-2799.5713"
           ry="23.45159" />
      </g>
      <text
         xml:space="preserve"
         style="font-size:166.39276123px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
         x="-25173.934"
         y="-11048.947"
         id="text10234"
         sodipodi:linespacing="125%"><tspan
           sodipodi:role="line"
           id="tspan10236"
           x="-25173.934"
           y="-11048.947"
           style="font-size:2079.90942383px">Jonas.Kunze@cern.ch</tspan></text>
    </g>
  </g>
  <g
     inkscape:label="Layer"
     id="layer3"
     inkscape:groupmode="layer">
    <flowRoot
       style="fill:black;stroke:none;stroke-opacity:1;stroke-width:1px;stroke-linejoin:miter;stroke-linecap:butt;fill-opacity:1;font-family:Sans;font-style:normal;font-weight:normal;font-size:40px;line-height:125%;letter-spacing:0px;word-spacing:0px"
       id="flowRoot7067"
       xml:space="preserve"><flowRegion
         id="flowRegion7069"><rect
           y="35222.316"
           x="-12232.947"
           height="2545.5845"
           width="4949.7476"
           id="rect7071" /></flowRegion><flowPara
         id="flowPara7073" /></flowRoot>    <text
       sodipodi:linespacing="125%"
       id="text7075"
       y="40890.352"
       x="3733.8101"
       style="font-size:24px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
       xml:space="preserve"><tspan
         style="font-size:12px;font-weight:bold;-inkscape-font-specification:Sans Bold"
         y="40890.352"
         x="3733.8101"
         id="tspan7077"
         sodipodi:role="line">Get connected!</tspan></text>
    <text
       sodipodi:linespacing="150%"
       id="text7079"
       y="40928.891"
       x="3734.4077"
       style="font-size:24px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;letter-spacing:0px;word-spacing:0px;writing-mode:lr-tb;text-anchor:start;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans;-inkscape-font-specification:Sans"
       xml:space="preserve"><tspan
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans Bold"
         y="40928.891"
         x="3734.4077"
         id="tspan7081"
         sodipodi:role="line">Who's already working on L1/L2?</tspan><tspan
         id="tspan7083"
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
         y="40946.891"
         x="3734.4077"
         sodipodi:role="line">   - Jacopo Pinzino (STRAW, MC)</tspan><tspan
         id="tspan7091"
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
         y="40964.891"
         x="3734.4077"
         sodipodi:role="line">   - Bucharest (disappeared)</tspan><tspan
         id="tspan7087"
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
         y="40982.891"
         x="3734.4077"
         sodipodi:role="line">   - Thomas Hancock</tspan><tspan
         id="tspan7089"
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
         y="41000.891"
         x="3734.4077"
         sodipodi:role="line">   - Laura Rogers</tspan><tspan
         id="tspan7120"
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
         y="41018.891"
         x="3734.4077"
         sodipodi:role="line">   - you?!</tspan><tspan
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
         y="41036.891"
         x="3734.4077"
         sodipodi:role="line"
         id="tspan7742" /><tspan
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
         y="41054.891"
         x="3734.4077"
         sodipodi:role="line"
         id="tspan7744">Please tell me!</tspan><tspan
         id="tspan7085"
         style="font-size:12px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:start;line-height:150%;writing-mode:lr-tb;text-anchor:start;font-family:Sans;-inkscape-font-specification:Sans"
         y="41072.891"
         x="3734.4077"
         sodipodi:role="line" /></text>
    <path
       sodipodi:nodetypes="cccc"
       inkscape:connector-curvature="0"
       d="m 3750.9856,40972.44 c 1.6573,0.276 110.0711,12.844 110.0711,12.844 m -110.0711,0 110.0711,-12.844"
       style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
       id="path7095" />
    <text
       sodipodi:linespacing="125%"
       id="text7098"
       y="40951.262"
       x="3820.3101"
       style="font-size:24px;font-style:normal;font-weight:normal;line-height:125%;letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;font-family:Sans"
       xml:space="preserve"><tspan
         y="40951.262"
         x="3820.3101"
         id="tspan7100"
         sodipodi:role="line" /></text>
    <path
       sodipodi:nodetypes="cccc"
       inkscape:connector-curvature="0"
       d="m 3751.6071,40990.395 c 1.6573,0.276 84.0711,12.844 84.0711,12.844 m -84.0711,0 84.0711,-12.844"
       style="fill:none;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:1, 2;stroke-dashoffset:0"
       id="path7095-7" />
    <rect
       ry="17.514341"
       y="40862.402"
       x="3698.5181"
       height="214.30518"
       width="275.6246"
       id="rect7122"
       style="fill:none;stroke:#000000;stroke-width:1.03656471;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none;stroke-dashoffset:0" />
  </g>
  <script
     ns1:version="13.11-30213629"
     id="sozi-script">/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * Create or augment a namespace.
 *
 * &lt;p&gt;A typical use of this function is:&lt;/p&gt;
 *
 * &lt;pre&gt;
 * namespace(this, &quot;a.b.c&quot;, function (exports, globals) {
 *     exports.foo = function (x) {
 *         ...
 *     };
 * });
 * &lt;/pre&gt;
 *
 * &lt;p&gt;where &lt;code&gt;this&lt;/code&gt; is the global object.&lt;/p&gt;
 *
 * &lt;p&gt;In this example, function &lt;code&gt;foo&lt;/code&gt; is exported and can be
 * called as &lt;code&gt;a.b.c.foo(someValue)&lt;/code&gt;.&lt;/p&gt;
 *
 * @memberOf _global_
 * @param globals The global object
 * @param {String} path The dot-separated path to the namespace
 * @param {Function} body A function to execute in the context of the namespace
 */
function namespace(globals, path, body) {
    &quot;use strict&quot;;
    
    // Start name lookup in the global object
	var current = globals;
	
	// For each name in the given path
	path.split(&quot;.&quot;).forEach(function (name) {
	    // If the current path element does not exist
	    // in the current namespace, create a new sub-namespace
		if (typeof current[name] === &quot;undefined&quot;) {
			current[name] = {};
		}
		
		// Move to the namespace for the current path element
		current = current[name];
	});
	
	// Execute the given function in the last namespace
	if (body) {
	    body(current, globals);
	}
	
	return current;
}


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.events
 * @namespace A simple event system for Sozi.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.events&quot;, function (exports) {
    /** @lends sozi.events */

    &quot;use strict&quot;;
    
    /**
     * A registry of callback functions for each event type.
     *
     * &lt;p&gt;Call {@link sozi.events.listen} to add a new listener.&lt;/p&gt;
     */
    var listenerRegistry = {};

    /**
     * Adds a listener for a given event type.
     *
     * @memberOf sozi.events
     * @name listen
     * @function
     * @param {String} key The identifier of the event type to listen
     * @param {Function} handler The function to call when a corresponding event is fired
     */
    exports.listen = function (key, handler) {
        if (!listenerRegistry.hasOwnProperty(key)) {
            listenerRegistry[key] = [];
        }
        listenerRegistry[key].push(handler);
    };
    
    /**
     * Fire an event of a given type.
     *
     * &lt;p&gt;All event handlers added for the given event type are
     * executed.&lt;/p&gt;
     *
     * &lt;p&gt;Additional arguments provided to this function are passed
     * to the event handlers.&lt;/p&gt;
     *
     * @memberOf sozi.events
     * @name fire
     * @function
     * @param {String} key The identifier of the event type to fire
     */
    exports.fire = function (key) {
        var args = Array.prototype.slice.call(arguments, 1);
        if (listenerRegistry.hasOwnProperty(key)) {
            listenerRegistry[key].forEach(function (listener) {
                listener.apply(null, args);
            });
        }
    };
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.proto
 * @namespace Helpers for prototype inheritance.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.proto&quot;, function (exports) {
    &quot;use strict&quot;;
    
    exports.Object = {
        installConstructors: function () {
            function InstanceConstructor() {}
            InstanceConstructor.prototype = this;
            
            this.instance = function () {
                var result = new InstanceConstructor();
                result.construct.apply(result, arguments);
                return result;
            };
            
            this.subtype = function (anObject) {
                var result = new InstanceConstructor();
                result.augment(anObject);
                result.installConstructors();
                return result;
            };
        },
        
        construct: function () {},
        
        augment: function (anObject) {
            for (var attr in anObject) {
                if (anObject.hasOwnProperty(attr)) {
                    this[attr] = anObject[attr];
                }
            }
            return this;
        },
        
        bind: function (aFunction) {
            var self = this;
            return function () {
                return aFunction.apply(self, arguments);
            }
        }
    };
    
    // Bootstrap the root object
    exports.Object.installConstructors();
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.actions
 * @namespace Callback functions for DOM event handlers
 * @depend namespace.js
 */
namespace(this, &quot;sozi.actions&quot;, function (exports, window) {
    /** @lends sozi.actions */
    
    &quot;use strict&quot;;
    
    // Module aliases
    var player = namespace(window, &quot;sozi.player&quot;);
    var display = namespace(window, &quot;sozi.display&quot;);
    
    // The global document object
    var document = window.document;
    
    // Constants: mouse button numbers
    var DRAG_BUTTON = 0;    // Left button
    var TOC_BUTTON = 1;     // Middle button
    
    // Constants: increments for zooming and rotating,
    // threshold for dragging
    var SCALE_FACTOR = 1.05;
    var ROTATE_STEP = 5;
    var DRAG_THRESHOLD_PX = 5;
    
    /**
     * The status of the current drag operation.
     *
     * @type Boolean
     */
    var mouseDragged = false;
    
    /**
     * The X coordinate of the mouse on the latest &quot;down&quot; or &quot;drag&quot; event.
     *
     * @type Number
     */
    var mouseLastX = 0;

    /**
     * The Y coordinate of the mouse on the latest &quot;down&quot; or &quot;drag&quot; event.
     *
     * @type Number
     */
    var mouseLastY = 0;
    
    /**
     * Zooms the display in the given direction.
     *
     * &lt;p&gt;Only the sign of &lt;code&gt;direction&lt;/code&gt; is used:&lt;/p&gt;
     * &lt;ul&gt;
     *  &lt;li&gt;zoom in when &lt;code&gt;direction &gt; 0&lt;/code&gt;&lt;/li&gt;
     *  &lt;li&gt;zoom out when &lt;code&gt;direction &lt;= 0&lt;/code&gt;&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * &lt;p&gt;The scaling is centered around point (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).&lt;/p&gt;
     *
     * @param {Number} direction The direction of the scaling operation
     * @param {Number} x The X coordinate of the scaling center
     * @param {Number} y The Y coordinate of the scaling center
     */
    function zoom(direction, x, y) {
        player.stop();
        display.viewPorts[&quot;player&quot;].zoom(direction &gt; 0 ? SCALE_FACTOR : 1 / SCALE_FACTOR, x, y);
    }
    
    /**
     * Rotate the display in the given direction.
     *
     * &lt;p&gt;Only the sign of &lt;code&gt;direction&lt;/code&gt; is used:&lt;/p&gt;
     * &lt;ul&gt;
     *  &lt;li&gt;rotate anticlockwise when direction &gt; 0&lt;/li&gt;
     *  &lt;li&gt;rotate clockwise when direction &lt;= 0&lt;/li&gt;
     * &lt;/ul&gt;
     *
     * @param {Number} direction The direction of the rotation
     */
    function rotate(direction) {
        player.stop();
        display.viewPorts[&quot;player&quot;].rotate(direction &gt; 0 ? ROTATE_STEP : -ROTATE_STEP);
    }
    
    /**
     * Show/hide the frame list.
     *
     * &lt;p&gt;The presentation stops when the frame list is showed,
     * and restarts when the frame list is hidden.&lt;/p&gt;
     */
    function toggleFrameList() {
        if (sozi.framelist.isVisible()) {
            sozi.framelist.hide();
            player.restart();
        } else {
            player.stop();
            sozi.framelist.show();
        }
    }

    function isPlayerEvent(evt) {
        return display.viewPorts[&quot;player&quot;].contains(evt.clientX, evt.clientY);
    }
    
    /**
     * Event handler: mouse down.
     *
     * &lt;p&gt;When the left button is pressed, we register the current coordinates
     * in case the mouse will be dragged. Handler {@link sozi.actions-onMouseDrag} is set until
     * the button is released ({@link sozi.actions-onMouseUp}).&lt;/p&gt;
     *
     * &lt;p&gt;When the middle button is pressed, the table of contents is shown or hidden.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseDown(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (evt.button === DRAG_BUTTON) {
            document.documentElement.addEventListener(&quot;mousemove&quot;, onMouseDrag, false);
            mouseDragged = false;
            mouseLastX = evt.clientX;
            mouseLastY = evt.clientY;
        } else if (evt.button === TOC_BUTTON) {
            toggleFrameList();
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse move.
     *
     * &lt;p&gt;If the left mouse button is down, then the mouse move is a drag action.
     * This method computes the displacement since the button was pressed or
     * since the last move, and updates the reference coordinates for the next move.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseDrag(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        player.stop();
        
        // The drag action is confirmed when one of the mouse coordinates
        // has moved past the threshold
        if (!mouseDragged &amp;&amp; (Math.abs(evt.clientX - mouseLastX) &gt; DRAG_THRESHOLD_PX ||
                              Math.abs(evt.clientY - mouseLastY) &gt; DRAG_THRESHOLD_PX)) {
            mouseDragged = true;
        }
        
        if (mouseDragged) {
            sozi.events.fire(&quot;sozi.player.cleanup&quot;);
            display.viewPorts[&quot;player&quot;].drag(evt.clientX - mouseLastX, evt.clientY - mouseLastY);
            mouseLastX = evt.clientX;
            mouseLastY = evt.clientY;
        }
        
        evt.stopPropagation();
    }

    /**
     * Event handler: mouse up.
     *
     * &lt;p&gt;Releasing the left button removes the {@link sozi.actions-onMouseDrag} handler.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onMouseUp(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (evt.button === DRAG_BUTTON) {
            document.documentElement.removeEventListener(&quot;mousemove&quot;, onMouseDrag, false);
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: context menu (i.e right click).
     *
     * &lt;p&gt;Right click goes one frame back.&lt;/p&gt;
     *
     * &lt;p&gt;There is no &quot;click&quot; event for the right mouse button and the menu
     * can't be disabled in {@link sozi.actions-onMouseDown}.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onContextMenu(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        player.moveToPrevious();
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse click.
     *
     * &lt;p&gt;Left-click moves the presentation to the next frame.&lt;/p&gt;
     *
     * &lt;p&gt;No &quot;click&quot; event is generated for the middle button in Firefox.
     * See {@link sozi.actions-onMouseDown} for middle click handling.&lt;/p&gt;
     *
     * &lt;p&gt;Dragging the mouse produces a &quot;click&quot; event when the button is released.
     * If flag {@link sozi.actions-mouseDragged} was set by {@link sozi.actions-onMouseDrag},
     * then the click event is the result of a drag action.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onClick(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        if (!mouseDragged &amp;&amp; evt.button !== TOC_BUTTON) {
            player.moveToNext();
        }
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: mouse wheel.
     *
     * &lt;p&gt;Rolling the mouse wheel stops the presentation and zooms the current display.&lt;/p&gt;
     *
     * FIXME shift key does not work in Opera
     *
     * @param {Event} evt The DOM event object
     */
    function onWheel(evt) {
        if (!isPlayerEvent(evt)) {
            return;
        }
        
        if (!evt) {
            evt = window.event;
        }

        var delta = 0;
        if (evt.wheelDelta) { // IE and Opera
            delta = evt.wheelDelta;
        }
        else if (evt.detail) { // Mozilla
            delta = -evt.detail;
        }
        
        if (delta !== 0) {
            if (evt.shiftKey) {
                rotate(delta);
            }
            else {
                zoom(delta, evt.clientX, evt.clientY);
            }
        }
        
        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: key press.
     *
     * &lt;p&gt;Keyboard handling is split into two methods:
     * {@link sozi.actions-onKeyPress} and {@link sozi.actions-onKeyDown}
     * in order to get the same behavior across browsers.&lt;/p&gt;
     *
     * &lt;p&gt;This method handles character keys &quot;+&quot;, &quot;-&quot;, &quot;=&quot;, &quot;F&quot; and &quot;T&quot;.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onKeyPress(evt) {
        // Keys with modifiers are ignored
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
            return;
        }

        switch (evt.charCode || evt.which) {
        case 43: // +
            zoom(1, window.innerWidth / 2, window.innerHeight / 2);
            break;
        case 45: // -
            zoom(-1, window.innerWidth / 2, window.innerHeight / 2);
            break;
        case 61: // =
            player.moveToCurrent();
            break;
        case 70: // F
        case 102: // f
            player.showAll();
            break;
        case 84: // T
        case 116: // t
            toggleFrameList();
            break;
        case 82: // R
            rotate(-1);
            break;
        case 114: // r
            rotate(1);
            break;
        default:
            return;
        }

        evt.stopPropagation();
        evt.preventDefault();
    }

    /**
     * Event handler: key down.
     *
     * &lt;p&gt;Keyboard handling is split into two methods:
     * {@link sozi.actions-onKeyPress} and {@link sozi.actions-onKeyDown}
     * in order to get the same behavior across browsers.&lt;/p&gt;
     *
     * &lt;p&gt;This method handles navigation keys (arrows, page up/down, home, end)
     * and the space and enter keys.&lt;/p&gt;
     *
     * @param {Event} evt The DOM event object
     */
    function onKeyDown(evt) {
        // Keys with Alt/Ctrl/Meta modifiers are ignored
        if (evt.altKey || evt.ctrlKey || evt.metaKey) {
            return;
        }

        switch (evt.keyCode) {
            case 36: // Home
                if (evt.shiftKey) {
                    player.jumpToFirst();
                }
                else {
                    player.moveToFirst();
                }
                break;
            case 35: // End
                if (evt.shiftKey) {
                    player.jumpToLast();
                }
                else {
                    player.moveToLast();
                }
                break;
            case 38: // Arrow up
            case 33: // Page up
            case 37: // Arrow left
                if (evt.shiftKey) {
                    player.jumpToPrevious();
                }
                else {
                    player.moveToPrevious();
                }
                break;
            case 40: // Arrow down
            case 34: // Page down
            case 39: // Arrow right
            case 13: // Enter
            case 32: // Space
                if (evt.shiftKey) {
                    player.jumpToNext();
                }
                else {
                    player.moveToNext();
                }
                break;
            default:
                // Ignore other keys and propagate the event
                return;
        }
        
        // Stop event propagation for supported keys
        evt.stopPropagation();
        
        // In some versions of Chrome/Chromium, preventDefault() inhibits the &quot;keypress&quot; event
        evt.preventDefault();
    }

    /**
     * Dummy event handler: stop event propagation.
     *
     * @param {Event} evt The DOM event object
     */
    function stopEvent(evt) {
        evt.stopPropagation();
    }

    /**
     * Event handler: document load.
     *
     * &lt;p&gt;This function sets up all other event handlers for the player.&lt;/p&gt;
     */
    function onDisplayReady() {
        // Prevent event propagation when clicking on a link
        // FIXME does not work in Firefox when the &lt;a&gt; is referenced through a &lt;use&gt;
        var links = document.getElementsByTagName(&quot;a&quot;);
        for (var i = 0; i &lt; links.length; i += 1) {
            links[i].addEventListener(&quot;click&quot;, stopEvent, false);
            links[i].addEventListener(&quot;contextmenu&quot;, stopEvent, false);
        }
        
        // Mouse events are constrained to the player viewport
        // see isPlayerEvent()
        // TODO also use shift-click as an alternative for middle-click
        var svgRoot = document.documentElement;
        svgRoot.addEventListener(&quot;click&quot;, onClick, false);
        svgRoot.addEventListener(&quot;mousedown&quot;, onMouseDown, false);
        svgRoot.addEventListener(&quot;mouseup&quot;, onMouseUp, false);
        svgRoot.addEventListener(&quot;contextmenu&quot;, onContextMenu, false);
        svgRoot.addEventListener(&quot;DOMMouseScroll&quot;, onWheel, false); // Mozilla
        window.onmousewheel = onWheel;

        // Keyboard events are global to the SVG document
        svgRoot.addEventListener(&quot;keypress&quot;, onKeyPress, false);
        svgRoot.addEventListener(&quot;keydown&quot;, onKeyDown, false);
    }

    sozi.events.listen(&quot;sozi.display.ready&quot;, onDisplayReady); // @depend events.js
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.animation
 * @namespace A general-purpose animation controller.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.animation&quot;, function (exports, window) {
    /** @lends sozi.animation */
    
    &quot;use strict&quot;;
    
    /**
     * The browser-specific function to request an animation frame.
     *
     * @function
     */
    var requestAnimationFrame =
            window.mozRequestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.msRequestAnimationFrame ||
            window.oRequestAnimationFrame;

    var getCurrentTime = function () {
        return window.performance &amp;&amp; window.performance.now ?
            window.performance.now() :
            Date.now();
    };

    exports.setAnimationFrameHandlers = function (requestAnimationFrameFunction, getCurrentTimeFunction) {
        requestAnimationFrame = requestAnimationFrameFunction;
        getCurrentTime = getCurrentTimeFunction;
    };

    /**
     * The default time step.
     *
     * &lt;p&gt;For browsers that do not support animation frames.&lt;/p&gt;
     *
     * @constant
     * @type Number
     */
    var TIME_STEP_MS = 40;
    
    /**
     * The handle provided by &lt;code&gt;setInterval()&lt;/code&gt;.
     *
     * &lt;p&gt;For browsers that do not support animation frames.&lt;/p&gt;
     */
    var timer;
    
    /**
     * The list of running animators.
     *
     * @type Array
     */
    var animatorList = [];
    
    /**
     * The main animation loop.
     *
     * &lt;p&gt;This function is called periodically and triggers the
     * animation steps in all running animators.&lt;/p&gt;
     *
     * &lt;p&gt;If all animators are removed from the list of running animators,
     * then the periodic calling is disabled.&lt;/p&gt;
     *
     * &lt;p&gt;This function can be called either through {@link sozi.animation-requestAnimationFrame}
     * if the browser supports it, or through &lt;code&gt;setInterval()&lt;/code&gt;.&lt;/p&gt;
     */
    function loop() {
        if (animatorList.length &gt; 0) {
            // If there is at least one animator,
            // and if the browser provides animation frames,
            // schedule this function to be called again in the next frame.
            if (requestAnimationFrame) {
                requestAnimationFrame(loop);
            }

            // Step all animators
            animatorList.forEach(function (animator) {
                // TODO use timestamp argument:
                // browser compatibility issue with Date.now()
                // and performance.now() timestamps.
                animator.step(getCurrentTime());
            });
        }
        else {
            // If all animators have been removed,
            // and if this function is called periodically
            // through setInterval, disable the periodic calling.
            if (!requestAnimationFrame) {
                window.clearInterval(timer);
            }
        }
    }
    
    /**
     * Start the animation loop.
     *
     * &lt;p&gt;This function delegates the periodic update of all animators
     * to the {@link sozi.animation-loop} function, either through {@link sozi.animation-requestAnimationFrame}
     * if the browser supports it, or through &lt;code&gt;setInterval()&lt;/code&gt;.&lt;/p&gt;
     */
    function start() {
        if (requestAnimationFrame) {
            requestAnimationFrame(loop);
        }
        else {
            timer = window.setInterval(function () {
                loop(getCurrentTime());
            }, TIME_STEP_MS);
        }
    }
    
    /**
     * Add a new animator object to the list of running animators.
     *
     * &lt;p&gt;If the animator list was empty before calling this function,
     * then the animation loop is started.&lt;/p&gt;
     *
     * @param {sozi.animation.Animator} animator The animator object to add.
     */
    function addAnimator(animator) {
        animatorList.push(animator);
        if (animatorList.length === 1) {
            start();
        }
    }
    
    /**
     * Remove the given animator from the list of running animators.
     *
     * @param {sozi.animation.Animator} animator The animator object to add.
     */
    function removeAnimator(animator) {
        animatorList.splice(animatorList.indexOf(animator), 1);
    }
    
    /**
     * @class
     *
     * An animator provides the logic for animating other objects.
     *
     * &lt;p&gt;The main purpose of an animator is to schedule the update
     * operations in the animated objects.&lt;/p&gt;
     *
     * @memberOf sozi.animation
     * @name Animator
     * @depend proto.js
     */
    exports.Animator = sozi.proto.Object.subtype({
        /** @lends sozi.animation.Animator */
        
        /**
         * Construct a new animator.
         */
        construct: function () {
            /**
             * The animation duration, in milliseconds.
             * @type Number
             */
            this.durationMs = 0;
            
            /**
             * A &quot;payload&quot; object that can be used by {@link sozi.animation.Animator.onStep}
             * and {@link sozi.animation.Animator.onDone}.
             */
            this.data = null;
            
            /**
             * The start time of the animation.
             * @type Number
             */
            this.initialTime = 0;
            
            /**
             * The current state of this animator.
             * @type Boolean
             */
            this.started = false;
        },

        /**
         * Start the current animator.
         *
         * &lt;p&gt;The current animator is added to the list of running animators
         * and is put in the &quot;started&quot; state.
         * It will be removed from the list automatically when the given duration
         * has elapsed.&lt;/p&gt;
         *
         * &lt;p&gt;Method {@link sozi.animation.Animator.onStep} is called once before starting the animation.&lt;/p&gt;
         *
         * @param {Number} durationMs The animation duration, in milliseconds
         * @param data Some data that can be used in {@link sozi.animation.Animator.onStep}
         * and {@link sozi.animation.Animator.onDone}
         */
        start: function (durationMs, data) {
            this.durationMs = durationMs;
            this.data = data;
            this.initialTime = getCurrentTime();
            this.onStep(0);
            if (!this.started) {
                this.started = true;
                addAnimator(this);
            }
        },

        /**
         * Stop the current animator.
         *
         * &lt;p&gt;The current animator is removed from the list of running animators
         * and is put in the &quot;stopped&quot; state.&lt;/p&gt;
         */
        stop: function () {
            if (this.started) {
                removeAnimator(this);
                this.started = false;
            }
        },

        /**
         * Perform one animation step.
         *
         * &lt;p&gt;This function is called automatically by the {@link sozi.animation-loop} function.
         * It calls {@link sozi.animation.Animator.onStep}.
         * If the animation duration has elapsed, {@link sozi.animation.Animator.onDone} is called.&lt;/p&gt;
         *
         * @param {Number} currentTime The current time
         */
        step: function (currentTime) {
            var elapsedTime = currentTime - this.initialTime;
            if (elapsedTime &gt;= this.durationMs) {
                this.stop();
                this.onStep(1);
                this.onDone();
            } else {
                this.onStep(elapsedTime / this.durationMs);
            }
        },
        
        /**
         * This method is called automatically on each animation step.
         *
         * &lt;p&gt;The default implementation does nothing. Override it in a
         * subclass or instance to provide your own implementation.&lt;p&gt;
         *
         * @param {Number} progress The elapsed fraction of the total duration (comprised between 0 and 1 included).
         */
        onStep: function (progress) {
            // Do nothing
        },
        
        /**
         * This method is called automatically when the animation ends.
         *
         * &lt;p&gt;The default implementation does nothing. Override it in a
         * subclass or instance to provide your own implementation.&lt;p&gt;
         */
        onDone: function () {
            // Do nothing
        }
    });

    /*
     * The acceleration profiles.
     *
     * Each profile is a function that operates in the interval [0, 1]
     * and produces a result in the same interval.
     *
     * These functions are meant to be called in {@link sozi.animation.Animator.onStep}
     * to transform the progress indicator according to the desired
     * acceleration effect.
     */
    exports.profiles = {
        &quot;linear&quot;: function (x) {
            return x;
        },

        &quot;accelerate&quot;: function (x) {
            return Math.pow(x, 3);
        },

        &quot;strong-accelerate&quot;: function (x) {
            return Math.pow(x, 5);
        },

        &quot;decelerate&quot;: function (x) {
            return 1 - Math.pow(1 - x, 3);
        },

        &quot;strong-decelerate&quot;: function (x) {
            return 1 - Math.pow(1 - x, 5);
        },

        &quot;accelerate-decelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = Math.pow(2 * xs, 3) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;strong-accelerate-decelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = Math.pow(2 * xs, 5) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;decelerate-accelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = (1 - Math.pow(1 - 2 * xs, 2)) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },

        &quot;strong-decelerate-accelerate&quot;: function (x) {
            var xs = x &lt;= 0.5 ? x : 1 - x,
                y = (1 - Math.pow(1 - 2 * xs, 3)) / 2;
            return x &lt;= 0.5 ? y : 1 - y;
        },
        
        &quot;immediate-beginning&quot;: function (x) {
            return 1;
        },
        
        &quot;immediate-end&quot;: function (x) {
            return x === 1 ? 1 : 0;
        },
        
        &quot;immediate-middle&quot;: function (x) {
            return x &gt;= 0.5 ? 1 : 0;
        }
    };
});


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.display
 * @namespace Display management.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.display&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // Constant: the Sozi namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

    var XLINK_NS = &quot;http://www.w3.org/1999/xlink&quot;;
    
    // The global document object
    var document = window.document;
    
    // The initial bounding box of the whole document,
    // assigned in onDocumentReady()
    var initialBBox;
    
    var lastWindowWidth;
    var lastWindowHeight;
    
    exports.viewPorts = {};
    
    var primaryViewport;

    /**
     * @depend proto.js
     */
    exports.CameraState = sozi.proto.Object.subtype({
        construct : function () {
            // Center coordinates
            this.cx = this.cy = 0;
            
            // Dimensions
            this.width = this.height = 1;
            
            // Rotation angle, in degrees
            this.angle = 0;
            
            // Clipping
            this.clipped = true;
            
            // Transition zoom
            this.transitionZoomPercent = 0;
            
            // Transition profile
            this.transitionProfile = sozi.animation.profiles.linear;
            
            // Transition path
            this.transitionPath = null;
        },

        setCenter: function (cx, cy) {
            this.cx = cx;
            this.cy = cy;
            return this;
        },
        
        setSize: function (width, height) {
            this.width = width;
            this.height = height;
            return this;
        },
        
        setClipped: function (clipped) {
            this.clipped = clipped;
            return this;
        },
        
        /*
         * Set the angle of the current camera state.
         * The angle of the current state is normalized
         * in the interval [-180 ; 180]
         */
        setAngle: function (angle) {
            this.angle = (angle + 180) % 360 - 180;
            return this;
        },
        
        setRawAngle: function (angle) {
            this.angle = angle;
            return this;
        },
        
        setTransitionZoomPercent: function (zoomPercent) {
            this.transitionZoomPercent = zoomPercent;
            return this;
        },
        
        setTransitionProfile: function (profile) {
            this.transitionProfile = profile;
            return this;
        },
        
        setTransitionPath: function (svgPath) {
            this.transitionPath = svgPath;
            return this;
        },
        
        /*
         * Set the current camera's properties to the given SVG element.
         *
         * If the element is a rectangle, the properties of the frames are based
         * on the geometrical properties of the rectangle.
         * Otherwise, the properties of the frame are based on the bounding box
         * of the given element.
         *
         * Parameters:
         *    - svgElement: an element from the SVG DOM
         */
        setAtElement: function (svgElement) {
            // Read the raw bounding box of the given SVG element
            var x, y, w, h;
            if (svgElement.nodeName === &quot;rect&quot;) {
                x = svgElement.x.baseVal.value;
                y = svgElement.y.baseVal.value;
                w = svgElement.width.baseVal.value;
                h = svgElement.height.baseVal.value;
            } else {
                var b = svgElement.getBBox();
                x = b.x;
                y = b.y;
                w = b.width;
                h = b.height;
            }

            // Compute the raw coordinates of the center
            // of the given SVG element
            var c = document.documentElement.createSVGPoint();
            c.x = x + w / 2;
            c.y = y + h / 2;
            
            // Compute the coordinates of the center of the given SVG element
            // after its current transformation
            var matrix = svgElement.getCTM();
            c = c.matrixTransform(matrix);

            // Compute the scaling factor applied to the given SVG element
            var scale = Math.sqrt(matrix.a * matrix.a + matrix.b * matrix.b);
            
            // Update the camera to match the bounding box information of the
            // given SVG element after its current transformation
            return this.setCenter(c.x, c.y)
                .setSize(w * scale, h * scale)
                .setAngle(Math.atan2(matrix.b, matrix.a) * 180 / Math.PI);
        },

        setAtState: function (other) {
            return this.setCenter(other.cx, other.cy)
                .setSize(other.width, other.height)
                .setAngle(other.angle)
                .setClipped(other.clipped)
                .setTransitionZoomPercent(other.transitionZoomPercent)
                .setTransitionProfile(other.transitionProfile)
                .setTransitionPath(other.transitionPath);
        },
        
        interpolatableAttributes: [&quot;width&quot;, &quot;height&quot;, &quot;angle&quot;],
        
        interpolate: function (initialState, finalState, ratio, useTransitionPath, reverseTransitionPath) {
            var remaining = 1 - ratio;
            for (var i = 0; i &lt; this.interpolatableAttributes.length; i += 1) {
                var attr = this.interpolatableAttributes[i];
                this[attr] = finalState[attr] * ratio + initialState[attr] * remaining;
            }

            var svgPath = reverseTransitionPath ? initialState.transitionPath : finalState.transitionPath;
            if (useTransitionPath &amp;&amp; svgPath) {
                var pathLength = svgPath.getTotalLength();
                
                if (reverseTransitionPath) {
                    var startPoint = svgPath.getPointAtLength(pathLength);
                    var endPoint = svgPath.getPointAtLength(0);
                    var currentPoint = svgPath.getPointAtLength(pathLength * remaining);
                }
                else {
                    var startPoint = svgPath.getPointAtLength(0);
                    var endPoint = svgPath.getPointAtLength(pathLength);
                    var currentPoint = svgPath.getPointAtLength(pathLength * ratio);
                }
 
                this.cx = currentPoint.x + (finalState.cx - endPoint.x) * ratio + (initialState.cx - startPoint.x) * remaining;
                this.cy = currentPoint.y + (finalState.cy - endPoint.y) * ratio + (initialState.cy - startPoint.y) * remaining;
            }
            else {
                this.cx = finalState.cx * ratio + initialState.cx * remaining;
                this.cy = finalState.cy * ratio + initialState.cy * remaining;
            }
        }
    });
    
    exports.Camera = exports.CameraState.subtype({
        construct: function (viewPort, idLayer) {
            exports.CameraState.construct.call(this);
            
            this.viewPort = viewPort;
            
            // Clipping rectangle
            this.svgClipRect = document.createElementNS(SVG_NS, &quot;rect&quot;);
        
            // Clipping path
            var svgClipPath = document.createElementNS(SVG_NS, &quot;clipPath&quot;);
            svgClipPath.setAttribute(&quot;id&quot;, &quot;sozi-clip-path-&quot; + viewPort.id + &quot;-&quot; + idLayer);
            svgClipPath.appendChild(this.svgClipRect);
            viewPort.svgGroup.appendChild(svgClipPath);

            // The group that will support the clipping operation
            var svgClippedGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
            svgClippedGroup.setAttribute(&quot;clip-path&quot;, &quot;url(#sozi-clip-path-&quot; + viewPort.id + &quot;-&quot; + idLayer + &quot;)&quot;);
            viewPort.svgGroup.appendChild(svgClippedGroup);
            
            if (viewPort.isPrimary) {
                // This group will support transformations
                // we keep the layer group clean since it can be referenced
                // from &lt;use&gt; elements
                this.svgLayer = document.createElementNS(SVG_NS, &quot;g&quot;);
                this.svgLayer.appendChild(document.getElementById(idLayer));
            }
            else {
                // A &lt;use&gt; element referencing the target layer
                this.svgLayer = document.createElementNS(SVG_NS, &quot;use&quot;);
                this.svgLayer.setAttributeNS(XLINK_NS, &quot;href&quot;, &quot;#&quot; + idLayer);
            }
            svgClippedGroup.appendChild(this.svgLayer);
        },
        
        setAtState: function (other) {
            return exports.CameraState.setAtState.call(this, other).update();
        },
        
        getScale: function () {
            return Math.min(this.viewPort.width / this.width, this.viewPort.height / this.height);
        },
        
        rotate: function (angle) {
            return this.setAngle(this.angle + angle).update();
        },

        zoom: function (factor, x, y) {
            return this.setSize(this.width / factor, this.height / factor)
                       .drag(
                            (1 - factor) * (x - this.viewPort.width / 2),
                            (1 - factor) * (y - this.viewPort.height / 2)
                        );
        },
        
        drag: function (deltaX, deltaY) {
            var scale = this.getScale();
            var angleRad = this.angle * Math.PI / 180;
            var si = Math.sin(angleRad);
            var co = Math.cos(angleRad);
            return this.setCenter(
                    this.cx - (deltaX * co - deltaY * si) / scale,
                    this.cy - (deltaX * si + deltaY * co) / scale
                ).setClipped(false).update();
        },

        update: function () {
            var scale = this.getScale();
                    
            // Compute the size and location of the frame on the screen
            var width = this.width  * scale;
            var height = this.height * scale;
            var x = (this.viewPort.width - width) / 2;
            var y = (this.viewPort.height - height) / 2;

            // Adjust the location and size of the clipping rectangle and the frame rectangle
            this.svgClipRect.setAttribute(&quot;x&quot;, this.clipped ? x : 0);
            this.svgClipRect.setAttribute(&quot;y&quot;, this.clipped ? y : 0);
            this.svgClipRect.setAttribute(&quot;width&quot;,  this.clipped ? width  : this.viewPort.width);
            this.svgClipRect.setAttribute(&quot;height&quot;, this.clipped ? height : this.viewPort.height);
                    
            // Compute and apply the geometrical transformation to the layer group
            var translateX = -this.cx + this.width / 2  + x / scale;
            var translateY = -this.cy + this.height / 2 + y / scale;

            this.svgLayer.setAttribute(&quot;transform&quot;,
                &quot;scale(&quot; + scale + &quot;)&quot; +
                &quot;translate(&quot; + translateX + &quot;,&quot; + translateY + &quot;)&quot; +
                &quot;rotate(&quot; + (-this.angle) + ',' + this.cx + &quot;,&quot; + this.cy + &quot;)&quot;
            );
            
            return this;
        }
    });
    
    /**
     * @depend proto.js
     */
    exports.ViewPort = sozi.proto.Object.subtype({
        construct: function (id, idLayerList, primary) {
            this.id = id;
            exports.viewPorts[id] = this;
            
            this.isPrimary = !!primary;
            
            if (this.isPrimary) {
                if (primaryViewport) {
                    throw &quot;Failed to create a primary viewport. A primary viewport already exists.&quot;;
                }
                else {
                    primaryViewport = this;
                }
            }
            
            // TODO add a clip path for the viewport
            this.svgGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
            this.svgGroup.setAttribute(&quot;class&quot;, &quot;sozi-viewport&quot;);
            this.svgGroup.setAttribute(&quot;id&quot;, &quot;sozi-viewport-&quot; + id);
            document.documentElement.appendChild(this.svgGroup);
            
            this.setLocation(0, 0).setSize(window.innerWidth, window.innerHeight);
            
            // Create a camera for each layer
            this.cameras = {};
            idLayerList.forEach(function (idLayer) {
                this.cameras[idLayer] = exports.Camera.instance(this, idLayer);
            }, this);
        },
        
        setSize: function (width, height) {
            this.width = width;
            this.height = height;
            return this;
        },
        
        setLocation: function (x, y) {
            this.x = x;
            this.y = y;
            return this;
        },

        contains: function (x, y) {
            return x &gt;= this.x &amp;&amp; x &lt; this.x + this.width &amp;&amp;
                   y &gt;= this.y &amp;&amp; y &lt; this.y + this.height;
        },
        
        /*
         * Returns the geometrical properties of the SVG document
         *
         * Returns:
         *    - The default size, translation and rotation for the document's bounding box
         */
        getDocumentState: function () {
            // This object defines the bounding box of the whole document
            var camera = exports.CameraState.instance()
                .setCenter(initialBBox.x + initialBBox.width / 2,
                           initialBBox.y + initialBBox.height / 2)
                .setSize(initialBBox.width, initialBBox.height)
                .setClipped(false);
            
            // Copy the document's bounding box to all layers
            var result = {};
            for (var idLayer in this.cameras) {
                result[idLayer] = camera;
            }
            return result;
        },

        /*
         * Apply geometrical transformations to the image according to the current
         * geometrical attributes of this Display.
         *
         * This method is called automatically when the window is resized.
         */
        update: function () {
            this.svgGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + this.x + &quot;,&quot; + this.y + &quot;)&quot;);
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].update();
            }
            return this;
        },

        /*
         * Transform the SVG document to show the given frame.
         *
         * Parameters:
         *    - frame: the frame to show
         */
        showFrame: function (frame) {
            for (var idLayer in frame.states) {
                this.cameras[idLayer].setAtState(frame.states[idLayer]);
            }
            return this;
        },

        /*
         * Apply an additional translation to the SVG document based on onscreen coordinates.
         *
         * Parameters:
         *    - deltaX: the horizontal displacement, in pixels
         *    - deltaY: the vertical displacement, in pixels
         */
        drag: function (deltaX, deltaY) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].drag(deltaX, deltaY);
            }
            return this;
        },

        /*
         * Zooms the display with the given factor.
         *
         * The zoom is centered around (x, y) with respect to the center of the display area.
         */
        zoom: function (factor, x, y) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].zoom(factor, x, y);
            }
            return this;
        },

        /*
         * Rotate the display with the given angle.
         *
         * The rotation is centered around the center of the display area.
         */
        rotate: function (angle) {
            for (var idLayer in this.cameras) {
                this.cameras[idLayer].rotate(angle);
            }
            return this;
        },
        
        /**
         * The default handler for window resize events.
         *
         * @param widthRatio The horizontal resize ratio
         * @param heightRatio The vertical resize ratio
         */
        onWindowResize: function (widthRatio, heightRatio) {
            this.setLocation(this.x * widthRatio, this.y * heightRatio)
                .setSize(this.width * widthRatio, this.height * heightRatio)
                .update();
        }
    });
    
    /*
     * Initializes the current Display.
     *
     * This method prepares the DOM representation of the current SVG document.
     * All the image is embedded into a global &quot;g&quot; element on which transformations will be applied.
     * A clipping rectangle is added.
     *
     * This method must be called when the document is ready to be manipulated.
     */
    function onDocumentReady() {
        var svgRoot = document.documentElement; // TODO check SVG tag
        
        // Save the initial bounding box of the document
        // and force its dimensions to the browser window
        initialBBox = svgRoot.getBBox();
        lastWindowWidth = window.innerWidth;
        lastWindowHeight = window.innerHeight;
        svgRoot.setAttribute(&quot;width&quot;, lastWindowWidth);
        svgRoot.setAttribute(&quot;height&quot;, lastWindowHeight);
        
        sozi.events.fire(&quot;sozi.display.ready&quot;);
    }

    /*
     * Resizes the SVG document to fit the browser window.
     *
     * This method calls onWindowResize on all registered viewports.
     */
    function resize() {
        var svgRoot = document.documentElement;
        svgRoot.setAttribute(&quot;width&quot;, window.innerWidth);
        svgRoot.setAttribute(&quot;height&quot;, window.innerHeight);
        
        for (var vp in exports.viewPorts) {
            exports.viewPorts[vp].onWindowResize(window.innerWidth / lastWindowWidth, window.innerHeight / lastWindowHeight);
        }

        lastWindowWidth = window.innerWidth;
        lastWindowHeight = window.innerHeight;
    }
    
    sozi.events.listen(&quot;sozi.document.ready&quot;, onDocumentReady); // @depend events.js
    window.addEventListener(&quot;resize&quot;, resize, false);
});

/*
* Sozi - A presentation tool using the SVG standard
*
* Copyright (C) 2010-2013 Guillaume Savaton
*
* This program is dual licensed under the terms of the MIT license
* or the GNU General Public License (GPL) version 3.
* A copy of both licenses is provided in the doc/ folder of the
* official release of Sozi.
*
* See http://sozi.baierouge.fr/wiki/en:license for details.
*/

/**
 * @name sozi.document
 * @namespace Document analysis.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.document&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
    var document = window.document;
    
    // Constant: the Sozi namespace
    var SOZI_NS = &quot;http://sozi.baierouge.fr&quot;;
    
    // Constant: the default frame properties, if missing in the SVG document
    var DEFAULTS = {
        &quot;title&quot;: &quot;Untitled&quot;,
        &quot;sequence&quot;: &quot;0&quot;,
        &quot;hide&quot;: &quot;true&quot;,
        &quot;clip&quot;: &quot;true&quot;,
        &quot;show-in-frame-list&quot;: &quot;true&quot;,
        &quot;timeout-enable&quot;: &quot;false&quot;,
        &quot;timeout-ms&quot;: &quot;5000&quot;,
        &quot;transition-duration-ms&quot;: &quot;1000&quot;,
        &quot;transition-zoom-percent&quot;: &quot;0&quot;,
        &quot;transition-profile&quot;: &quot;linear&quot;,
        &quot;transition-path-hide&quot;: &quot;true&quot;
    };

    var DRAWABLE_TAGS = [ &quot;g&quot;, &quot;image&quot;, &quot;path&quot;, &quot;rect&quot;, &quot;circle&quot;,
        &quot;ellipse&quot;, &quot;line&quot;, &quot;polyline&quot;, &quot;polygon&quot;, &quot;text&quot;, &quot;clippath&quot; ];

    // The definitions of all valid frames in the current document
    exports.frames = [];
    
    // The list of layer ids managed by Sozi
    exports.idLayerList = [];
    
    /*
    * Returns the value of an attribute of a given Sozi SVG element.
    *
    * If the attribute is empty or does not exist,
    * then a default value is returned (See DEFAULTS).
    */
    function readAttribute(soziElement, attr) {
        return soziElement.getAttributeNS(SOZI_NS, attr) || DEFAULTS[attr];
    }

    function readStateForLayer(frame, idLayer, soziElement) {
        var state = frame.states[idLayer] =
            frame.states[idLayer] || sozi.display.CameraState.instance();
        
        if (typeof state.transitionZoomPercent === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-zoom-percent&quot;)) {
            state.setTransitionZoomPercent(parseInt(readAttribute(soziElement, &quot;transition-zoom-percent&quot;), 10));
        }

        if (typeof state.transitionProfile === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-profile&quot;)) {
            state.setTransitionProfile(sozi.animation.profiles[readAttribute(soziElement, &quot;transition-profile&quot;)]);
        }
        
        if (typeof state.transitionPath === &quot;undefined&quot; || soziElement.hasAttributeNS(SOZI_NS, &quot;transition-path&quot;)) {
            var svgPath = document.getElementById(soziElement.getAttributeNS(SOZI_NS, &quot;transition-path&quot;));
            if (svgPath &amp;&amp; svgPath.nodeName === &quot;path&quot;) {
                state.setTransitionPath(svgPath);
                if (readAttribute(soziElement, &quot;transition-path-hide&quot;) === &quot;true&quot;) {
                    svgPath.style.visibility = &quot;hidden&quot;;
                }
            }
        }
        
        if (soziElement.hasAttributeNS(SOZI_NS, &quot;refid&quot;)) {
            var svgElement = document.getElementById(soziElement.getAttributeNS(SOZI_NS, &quot;refid&quot;));
            if (svgElement) {
                state.setAtElement(svgElement);
                if (readAttribute(soziElement, &quot;hide&quot;) === &quot;true&quot;) {
                    svgElement.style.visibility = &quot;hidden&quot;;
                }
            }
        }
            
        if (soziElement.hasAttributeNS(SOZI_NS, &quot;clip&quot;)) {
            state.setClipped(readAttribute(soziElement, &quot;clip&quot;) === &quot;true&quot;);
        }
    }
    
    /*
    * Builds the list of frames from the current document.
    *
    * This method collects all elements with tag &quot;sozi:frame&quot; and
    * retrieves their geometrical and animation attributes.
    * SVG elements that should be hidden during the presentation are hidden.
    *
    * The resulting list is available in frames, sorted by frame indices.
    */
    function readFrames() {
        // Collect all group ids referenced in &lt;layer&gt; elements
        var idLayerRefList = [];
        var soziLayerList = document.getElementsByTagNameNS(SOZI_NS, &quot;layer&quot;);
        for (var i = 0; i &lt; soziLayerList.length; i += 1) {
            var idLayer = soziLayerList[i].getAttributeNS(SOZI_NS, &quot;group&quot;);
            if (idLayer &amp;&amp; idLayerRefList.indexOf(idLayer) === -1) {
                idLayerRefList.push(idLayer);
            }
        }

        // Reorganize the document, grouping objects that do not belong
        // to a group referenced in &lt;layer&gt; elements
        var svgRoot = document.documentElement;
        var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

        // Create the first wrapper group
        var svgWrapper = document.createElementNS(SVG_NS, &quot;g&quot;);

        // For each child of the root SVG element
        var svgElementList = Array.prototype.slice.call(svgRoot.childNodes);
        svgElementList.forEach(function (svgElement, index) {
            if (!svgElement.getAttribute) {
                // Remove text elements
                svgRoot.removeChild(svgElement);
            }
            else if (idLayerRefList.indexOf(svgElement.getAttribute(&quot;id&quot;)) !== -1) {
                // If the current element is a referenced layer ...
                if (svgWrapper.firstChild) {
                    // ... and if there were other non-referenced elements before it,
                    // append the wrapper group to the &lt;defs&gt; element
                    svgWrapper.setAttribute(&quot;id&quot;, &quot;sozi-wrapper-&quot; + index);
                    exports.idLayerList.push(&quot;sozi-wrapper-&quot; + index);
                    svgRoot.insertBefore(svgWrapper, svgElement);
                    
                    // Prepare a new wrapper element
                    svgWrapper = document.createElementNS(SVG_NS, &quot;g&quot;);
                }
                
                // ... append the current element to the &lt;defs&gt; element
                exports.idLayerList.push(svgElement.getAttribute(&quot;id&quot;));
            }
            else if (DRAWABLE_TAGS.indexOf(svgElement.localName.toLowerCase()) !== -1) {
                // If the current element is not a referenced layer
                // and is drawable, move it to the current wrapper element
                svgRoot.removeChild(svgElement);
                svgWrapper.appendChild(svgElement);
            }
        });

        // Append last wrapper if needed
        if (svgWrapper.firstChild) {
            svgWrapper.setAttribute(&quot;id&quot;, &quot;sozi-wrapper-&quot; + svgElementList.length);
            exports.idLayerList.push(&quot;sozi-wrapper-&quot; + svgElementList.length);
            svgRoot.appendChild(svgWrapper);
        }

        
        // Analyze &lt;frame&gt; elements sorted by sequence number
        var soziFrameList = Array.prototype.slice.call(document.getElementsByTagNameNS(SOZI_NS, &quot;frame&quot;));
        soziFrameList.sort(
            function (a, b) {
                var seqA = parseInt(readAttribute(a, &quot;sequence&quot;), 10);
                var seqB = parseInt(readAttribute(b, &quot;sequence&quot;), 10)
                return seqA - seqB;
            }
        );
        
        soziFrameList.forEach(function (soziFrame, indexFrame) {
            var newFrame = {
                id: soziFrame.getAttribute(&quot;id&quot;),
                title: readAttribute(soziFrame, &quot;title&quot;),
                showInFrameList: readAttribute(soziFrame, &quot;show-in-frame-list&quot;) === &quot;true&quot;,
                sequence: parseInt(readAttribute(soziFrame, &quot;sequence&quot;), 10),
                timeoutEnable: readAttribute(soziFrame, &quot;timeout-enable&quot;) === &quot;true&quot;,
                timeoutMs: parseInt(readAttribute(soziFrame, &quot;timeout-ms&quot;), 10),
                transitionDurationMs: parseInt(readAttribute(soziFrame, &quot;transition-duration-ms&quot;), 10),
                states: {}
            };

            // Get the default properties for all layers, either from
            // the current &lt;frame&gt; element or from the corresponding
            // layer in the previous frame.
            // Those properties can later be overriden by &lt;layer&gt; elements
            exports.idLayerList.forEach(function (idLayer) {
                if (indexFrame === 0 || idLayer.search(&quot;sozi-wrapper-[0-9]+&quot;) !== -1) {
                    // In the first frame, or in wrapper layers,
                    // read layer attributes from the &lt;frame&gt; element
                    readStateForLayer(newFrame, idLayer, soziFrame);
                }
                else {
                    // After the first frame, in referenced layers,
                    // copy attributes from the corresponding layer in the previous frame
                    var currentState = newFrame.states[idLayer] = sozi.display.CameraState.instance();
                    var previousState = exports.frames[exports.frames.length - 1].states[idLayer];
                    currentState.setAtState(previousState);
                }
            });

            // Collect and analyze &lt;layer&gt; elements in the current &lt;frame&gt; element
            var soziLayerList = Array.prototype.slice.call(soziFrame.getElementsByTagNameNS(SOZI_NS, &quot;layer&quot;));
            soziLayerList.forEach(function (soziLayer) {
                var idLayer = soziLayer.getAttributeNS(SOZI_NS, &quot;group&quot;);
                if (idLayer &amp;&amp; exports.idLayerList.indexOf(idLayer) !== -1) {
                    readStateForLayer(newFrame, idLayer, soziLayer);
                }
            });
            
            // If the &lt;frame&gt; element has at least one valid layer,
            // add it to the frame list
            for (var idLayer in newFrame.states) {
                if (newFrame.states.hasOwnProperty(idLayer)) {
                    exports.frames.push(newFrame);
                    break;
                }
            }
        });
    }

    /**
     * Return the frame with the given id.
     *
     * @return The index of the frame with the given id. -1 if not found.
     */
    exports.getFrameIndexForId = function (idFrame) {
        for (var indexFrame = 0; indexFrame &lt; exports.frames.length; indexFrame += 1) {
            if (exports.frames[indexFrame].id === idFrame) {
                return indexFrame;
            }
        }
        return - 1;
    };
    
    /*
     * Event handler: document load.
     *
     * This function reads the frames from the document and fires
     * the &quot;documentready&quot; event.
     *
     * @depend events.js
     */
    function onLoad() {
        document.documentElement.removeAttribute(&quot;viewBox&quot;);
        readFrames();
        sozi.events.fire(&quot;sozi.document.ready&quot;);
    }

    window.addEventListener(&quot;load&quot;, onLoad, false);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.framelist
 * @namespace Show the frame list.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.framelist&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
	var document = window.document;
	
    // Constant: the margin around the text of the frame list
    var MARGIN = 5;
    
	// The SVG group that will contain the frame list
    var svgTocGroup;
    
    // The SVG group that will contain the frame titles
    var svgTitlesGroup;
    
    // The current height of the frame list,
    // computed during the initialization
    var tocHeight = 0;
    
    // The X coordinate of the frame list in its hidden state
    var translateXHidden;
    
    // The X coordinate of the frame list when it is completely visible
    var translateXVisible;
    
    // The initial X coordinate of the frame list before starting an animation.
    // This variable is set before showing/hiding the frame list.
    var translateXStart;
    
    // The final X coordinate of the frame list for the starting animation.
    // This variable is set before showing/hiding the frame list.
    var translateXEnd;
    
    // The current X coordinate of the frame list for the running animation.
    // This variable is updated on each animation step.
    var translateX;
    
    // The animator object that will manage animations of the frame list
    var animator;
    
    // Constant: the duration of the showing/hiding animation, in milliseconds
    var ANIMATION_TIME_MS = 300;
    
    // Constant: the acceleration profile of the showing/hiding animation
    var ANIMATION_PROFILE = &quot;decelerate&quot;;
    
    // Constant: the SVG namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;

	function onMouseOut(evt) {
        var rel = evt.relatedTarget,
            svgRoot = document.documentElement;
        while (rel &amp;&amp; rel !== svgTocGroup &amp;&amp; rel !== svgRoot) {
            rel = rel.parentNode;
        }
        if (rel !== svgTocGroup) {
            exports.hide();
            sozi.player.restart();
            evt.stopPropagation();
        }
    }

	function onClickArrowUp(evt) {
        var ty = svgTitlesGroup.getCTM().f;
        if (ty &lt;= -window.innerHeight / 2) {
            ty += window.innerHeight / 2;
        } else if (ty &lt; 0) {
            ty = 0;
        }
        svgTitlesGroup.setAttribute(&quot;transform&quot;, &quot;translate(0,&quot; + ty + &quot;)&quot;);
        evt.stopPropagation();
	}

	function onClickArrowDown(evt) {
        var ty = svgTitlesGroup.getCTM().f;
        if (ty + tocHeight &gt;= window.innerHeight * 3 / 2) {
            ty -= window.innerHeight / 2;
        } else if (ty + tocHeight &gt; window.innerHeight + 2 * MARGIN) {
            ty = window.innerHeight - tocHeight - 4 * MARGIN;
        }
        svgTitlesGroup.setAttribute(&quot;transform&quot;, &quot;translate(0,&quot; + ty + &quot;)&quot;);
        evt.stopPropagation();
    }

    /*
     * Create a function that responds to clicks on frame list entries.
     */
    function makeClickHandler(index) {
        return function (evt) {
            sozi.player.previewFrame(index);
            evt.stopPropagation();
        };
    }
    
    /*
     * The default event handler, to prevent event propagation
     * through the frame list.
     */
    function defaultEventHandler(evt) {
	    evt.stopPropagation();
    }
    
    /*
     * Adds a table of contents to the document.
     *
     * The table of contents is a rectangular region with the list of frame titles.
     * Clicking on a title moves the presentation to the corresponding frame.
     *
     * The table of contents is hidden by default.
     */
    function onPlayerReady() {
        svgTocGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgTocGroup.setAttribute(&quot;id&quot;, &quot;sozi-toc&quot;);
        document.documentElement.appendChild(svgTocGroup);

        svgTitlesGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgTocGroup.appendChild(svgTitlesGroup);
    
        // The background rectangle of the frame list
        var tocBackground = document.createElementNS(SVG_NS, &quot;rect&quot;);
        tocBackground.setAttribute(&quot;id&quot;, &quot;sozi-toc-background&quot;);
        tocBackground.setAttribute(&quot;x&quot;, MARGIN);
        tocBackground.setAttribute(&quot;y&quot;, MARGIN);
        tocBackground.setAttribute(&quot;rx&quot;, MARGIN);
        tocBackground.setAttribute(&quot;ry&quot;, MARGIN);
        tocBackground.addEventListener(&quot;click&quot;, defaultEventHandler, false);
        tocBackground.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        tocBackground.addEventListener(&quot;mouseout&quot;, onMouseOut, false);
        svgTitlesGroup.appendChild(tocBackground);

        var tocWidth = 0;
        sozi.document.frames.forEach(function (frame, frameIndex) {
            if (frame.showInFrameList) {
                var text = document.createElementNS(SVG_NS, &quot;text&quot;);
                text.appendChild(document.createTextNode(frame.title));
                text.setAttribute(&quot;id&quot;, &quot;sozi-toc-&quot; + frame.id);
                svgTitlesGroup.appendChild(text);
    
                if (frameIndex === sozi.player.currentFrameIndex) {
                    text.setAttribute(&quot;class&quot;, &quot;sozi-toc-current&quot;);
                }
                         
                var textWidth = text.getBBox().width;
                tocHeight += text.getBBox().height;
                if (textWidth &gt; tocWidth) {
                    tocWidth = textWidth;
                }
    
                text.setAttribute(&quot;x&quot;, 2 * MARGIN);
                text.setAttribute(&quot;y&quot;, tocHeight + MARGIN);
                text.addEventListener(&quot;click&quot;, makeClickHandler(frameIndex), false);
                text.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
            }
        });

        // The &quot;up&quot; button
        var tocUp = document.createElementNS(SVG_NS, &quot;path&quot;);
        tocUp.setAttribute(&quot;class&quot;, &quot;sozi-toc-arrow&quot;);
        tocUp.setAttribute(&quot;d&quot;, &quot;M&quot; + (tocWidth + 3 * MARGIN) + &quot;,&quot; + (5 * MARGIN) +
                           &quot; l&quot; + (4 * MARGIN) + &quot;,0&quot; +
                           &quot; l-&quot; + (2 * MARGIN) + &quot;,-&quot; + (3 * MARGIN) +
                           &quot; z&quot;);
        tocUp.addEventListener(&quot;click&quot;, onClickArrowUp, false);
        tocUp.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        svgTocGroup.appendChild(tocUp);

        // The &quot;down&quot; button
        var tocDown = document.createElementNS(SVG_NS, &quot;path&quot;);
        tocDown.setAttribute(&quot;class&quot;, &quot;sozi-toc-arrow&quot;);
        tocDown.setAttribute(&quot;d&quot;, &quot;M&quot; + (tocWidth + 3 * MARGIN) + &quot;,&quot; + (7 * MARGIN) +
                             &quot; l&quot; + (4 * MARGIN) + &quot;,0&quot; +
                             &quot; l-&quot; + (2 * MARGIN) + &quot;,&quot; + (3 * MARGIN) +
                             &quot; z&quot;);
        tocDown.addEventListener(&quot;click&quot;, onClickArrowDown, false);
        tocDown.addEventListener(&quot;mousedown&quot;, defaultEventHandler, false);
        svgTocGroup.appendChild(tocDown);

        tocBackground.setAttribute(&quot;width&quot;, tocWidth + 7 * MARGIN);
        tocBackground.setAttribute(&quot;height&quot;, tocHeight + 2 * MARGIN);
        
        translateXHidden = -tocWidth - 9 * MARGIN;
        translateXVisible = 0;
        translateX = translateXEnd = translateXHidden;
        
        svgTocGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + translateXHidden + &quot;,0)&quot;);
        animator = sozi.animation.Animator.instance().augment({
            onStep: function (progress) {
                var profileProgress = sozi.animation.profiles[ANIMATION_PROFILE](progress),
                    remaining = 1 - profileProgress;
                translateX = translateXEnd * profileProgress + translateXStart * remaining;
                svgTocGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + translateX + &quot;,0)&quot;);
            }
        });
    }

	/*
	 * Highlight the current frame title in the frame list.
	 *
	 * This handler is called on each frame change,
	 * even when the frame list is hidden.
	 */
    function onFrameChange(index) {
        var currentElementList = Array.prototype.slice.call(document.getElementsByClassName(&quot;sozi-toc-current&quot;));
        currentElementList.forEach(function (svgElement) {
            svgElement.removeAttribute(&quot;class&quot;);
        });

        var frame = sozi.document.frames[index];
        if (frame.showInFrameList) {
            document.getElementById(&quot;sozi-toc-&quot; + frame.id).setAttribute(&quot;class&quot;, &quot;sozi-toc-current&quot;);
        }
    }
    
    /*
     * Makes the table of contents visible.
     */
    exports.show = function () {
        // Bring frame list to front
        document.documentElement.appendChild(svgTocGroup);
        
        translateXStart = translateX;
        translateXEnd = translateXVisible;
        animator.start(ANIMATION_TIME_MS); // FIXME depends on current elapsed time
    };

    /*
     * Makes the table of contents invisible.
     */
    exports.hide = function () {
        translateXStart = translateX;
        translateXEnd = translateXHidden;
        animator.start(ANIMATION_TIME_MS); // FIXME depends on current elapsed time
    };

    /*
     * Returns true if the table of contents is visible, false otherwise.
     */
    exports.isVisible = function () {
        return translateXEnd === translateXVisible;
    };

    // @depend events.js
	sozi.events.listen(&quot;sozi.player.ready&quot;, onPlayerReady);
	sozi.events.listen(&quot;sozi.player.cleanup&quot;, exports.hide);
	sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange);
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.framenumber
 * @namespace Show the frame number.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.framenumber&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    // An alias to the global document object
    var document = window.document;
    
    // The SVG group containing the frame number
    var svgGroup;
    
    // The SVG text element and its text node containing the frame number
    var svgText, svgTextNode;
    
    // The SVG circle enclosing the frame number
    var svgCircle;
    
    // Constant: the SVG namespace
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;
    
    function adjust() {
        var textBBox = svgText.getBBox(),
            d = Math.max(textBBox.width, textBBox.height) * 0.75,
            t = d * 1.25;
        svgCircle.setAttribute(&quot;r&quot;, d);
        svgGroup.setAttribute(&quot;transform&quot;, &quot;translate(&quot; + t + &quot;,&quot; + t + &quot;)&quot;);
    }
    
    function onPlayerReady() {
        svgGroup = document.createElementNS(SVG_NS, &quot;g&quot;);
        svgText = document.createElementNS(SVG_NS, &quot;text&quot;);
        svgCircle = document.createElementNS(SVG_NS, &quot;circle&quot;);
        
        svgGroup.setAttribute(&quot;id&quot;, &quot;sozi-framenumber&quot;);

        svgCircle.setAttribute(&quot;cx&quot;, 0);
        svgCircle.setAttribute(&quot;cy&quot;, 0);
        svgGroup.appendChild(svgCircle);
        
        svgTextNode = document.createTextNode(sozi.player.currentFrameIndex + 1);
        svgText.setAttribute(&quot;text-anchor&quot;, &quot;middle&quot;);
        svgText.setAttribute(&quot;dominant-baseline&quot;, &quot;central&quot;);
        svgText.setAttribute(&quot;x&quot;, 0);
        svgText.setAttribute(&quot;y&quot;, 0);
        svgText.appendChild(svgTextNode);
        svgGroup.appendChild(svgText);
        
        document.documentElement.appendChild(svgGroup);
        
        adjust();
    }

    function onFrameChange(index) {
        svgTextNode.nodeValue = index + 1;
    }
    
    // @depend events.js
	sozi.events.listen(&quot;sozi.player.ready&quot;, onPlayerReady);
	sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange);
});

/*
* Sozi - A presentation tool using the SVG standard
*
* Copyright (C) 2010-2013 Guillaume Savaton
*
* This program is dual licensed under the terms of the MIT license
* or the GNU General Public License (GPL) version 3.
* A copy of both licenses is provided in the doc/ folder of the
* official release of Sozi.
*
* See http://sozi.baierouge.fr/wiki/en:license for details.
*/

/**
 * @name sozi.links
 * @namespace Links fix for Webkit.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.links&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var SVG_NS = &quot;http://www.w3.org/2000/svg&quot;;
    var XLINK_NS = &quot;http://www.w3.org/1999/xlink&quot;;
    
    function getClickHandler(index) {
        return function (evt) {
            sozi.player.moveToFrame(index);
            evt.preventDefault();
            evt.stopPropagation();
        };
    }
    
    /*
     * Event handler: document ready.
     *
     * This function adds an event listener to each internal link.
     * Clicking on a link that targets a frame of this document
     * will call sozi.player.moveToFrame().
     */
    function onDocumentReady() {
        var links = window.document.getElementsByTagNameNS(SVG_NS, &quot;a&quot;);
        for (var i = 0; i &lt; links.length; i += 1) {
            var href = links[i].getAttributeNS(XLINK_NS, &quot;href&quot;);
            if (href &amp;&amp; href[0] === &quot;#&quot;) {
                links[i].addEventListener(&quot;click&quot;, getClickHandler(sozi.location.getFrameIndexForHash(href)), false);
            }
        }
    }

    sozi.events.listen(&quot;sozi.document.ready&quot;, onDocumentReady); // @depend events.js
});


/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.location
 * @namespace Manage the URL in the address bar of the browser window.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.location&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var changedFromWithin = false;

    /*
     * Returns the frame index corresponding to the URL hash.
     *
     * This is a shortcut for sozi.location.getFrameIndexForHash(window.location.hash)
     */
    exports.getFrameIndex = function () {
        return exports.getFrameIndexForHash(window.location.hash);
    };
    
    /*
     * Returns the frame index corresponding to the given URL hash.
     *
     * The URL hash can be either a frame index or a frame id.
     * In the URL, the frame index starts a 1.
     * This method converts it into a 0-based index.
     *
     * If the URL hash is not a positive integer, then 0 is returned.
     * It the URL hash is an integer greater than the last frame index, then
     * the last frame index is returned.
     */
    exports.getFrameIndexForHash = function (hash) {
        var indexOrId = hash ? hash.slice(1) : &quot;1&quot;;
        var index;
        if (/^[0-9]+$/.test(indexOrId)) {
            index = parseInt(indexOrId, 10) - 1;
        }
        else {
            index = sozi.document.getFrameIndexForId(indexOrId);
        }
        
        if (index &lt; 0) {
            return 0;
        }
        else if (index &gt;= sozi.document.frames.length) {
            return sozi.document.frames.length - 1;
        }
        else {
            return index;
        }
    };

    /*
     * Event handler: hash change.
     *
     * This function is called when the URL hash is changed.
     * If the hash was changed manually in the address bar, and if it corresponds to
     * a valid frame number, then the presentation moves to that frame.
     *
     * The hashchange event can be triggered externally, by the user modifying the URL,
     * or internally, by the script modifying window.location.hash.
     */
    function onHashChange() {
        var index = exports.getFrameIndex();
        if (!changedFromWithin) {
            sozi.player.moveToFrame(index);
        }
        changedFromWithin = false;
    }
    
    /*
     * Event handler: frame change.
     *
     * This function is called when the presentation has reached a new frame.
     * The URL hash is set to the current frame id.
     */
    function onFrameChange(index) {
        changedFromWithin = true;
        window.location.hash = &quot;#&quot; + sozi.document.frames[index].id;
    }

    window.addEventListener(&quot;hashchange&quot;, onHashChange, false);
    sozi.events.listen(&quot;sozi.player.framechange&quot;, onFrameChange); // @depend events.js
});

/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 *
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

/**
 * @name sozi.player
 * @namespace Presentation player.
 * @depend namespace.js
 */
namespace(this, &quot;sozi.player&quot;, function (exports, window) {
    &quot;use strict&quot;;
    
    var viewPort;
    
    // The animator object used to animate transitions
    var animator;
    
    // The handle returned by setTimeout() for frame timeout
    var nextFrameTimeout;
    
    // Constants: default animation properties
    // for out-of-sequence transitions
    var DEFAULT_DURATION_MS = 500;
    var DEFAULT_ZOOM_PERCENT = -10;
    var DEFAULT_PROFILE = &quot;linear&quot;;
    
    // The source frame index for the current transition
    var sourceFrameIndex = 0;
    
    // The index of the visible frame
    exports.currentFrameIndex = 0;
    
    // The state of the presentation.
    // If false, no automatic transition will be fired.
    var playing = false;
    
    // The state of the current frame.
    // If true, an automatic transition will be fired after the current timeout.
    var waiting = false;

    /*
     * Starts waiting before moving to the next frame.
     *
     * It the current frame has a timeout set, this method
     * will register a timer to move to the next frame automatically
     * after the specified time.
     *
     * If the current frame is the last, the presentation will
     * move to the first frame.
     */
    function waitTimeout() {
        if (sozi.document.frames[exports.currentFrameIndex].timeoutEnable) {
            waiting = true;
            var index = (exports.currentFrameIndex + 1) % sozi.document.frames.length;
            nextFrameTimeout = window.setTimeout(function () {
                    exports.moveToFrame(index);
                },
                sozi.document.frames[exports.currentFrameIndex].timeoutMs
            );
        }
    }

    /*
     * Starts the presentation from the given frame index (0-based).
     *
     * This method sets the &quot;playing&quot; flag, shows the desired frame
     * and calls waitTimeout.
     */
    exports.startFromIndex = function (index) {
        playing = true;
        waiting = false;
        sourceFrameIndex = index;
        exports.currentFrameIndex = index;
        viewPort.showFrame(sozi.document.frames[index]);
        waitTimeout();
    };

    exports.restart = function () {
        exports.startFromIndex(exports.currentFrameIndex);
    };

    /*
     * Stops the presentation.
     *
     * This method clears the &quot;playing&quot;.
     * If the presentation was in &quot;waiting&quot; mode due to a timeout
     * in the current frame, then it stops waiting.
     * The current animation is stopped in its current state.
     */
    exports.stop = function () {
        animator.stop();
        if (waiting) {
            window.clearTimeout(nextFrameTimeout);
            waiting = false;
        }
        playing = false;
        sourceFrameIndex = exports.currentFrameIndex;
    };

    function getZoomData(zoomPercent, s0, s1) {
        var result = {
            ss: ((zoomPercent &lt; 0) ? Math.max(s0, s1) : Math.min(s0, s1)) * (100 - zoomPercent) / 100,
            ts: 0.5,
            k: 0
        };

        if (zoomPercent !== 0) {
            var a = s0 - s1;
            var b = s0 - result.ss;
            var c = s1 - result.ss;

            if (a !== 0) {
                var d = Math.sqrt(b * c);

                var u = (b - d) / a;
                var v = (b + d) / a;

                result.ts = (u &gt; 0 &amp;&amp; u &lt;= 1) ? u : v;
            }

            result.k = b / result.ts / result.ts;
        }

        return result;
    }

    /*
     * Jump to a frame with the given index (0-based).
     *
     * This method does not animate the transition from the current
     * state of the display to the desired frame.
     *
     * The presentation is stopped: if a timeout has been set for the
     * target frame, it will be ignored.
     *
     * The URL hash is set to the given frame index (1-based).
     */
    exports.jumpToFrame = function (index) {
        exports.stop();
        sozi.events.fire(&quot;sozi.player.cleanup&quot;);

        sourceFrameIndex = index;
        exports.currentFrameIndex = index;
        viewPort.showFrame(sozi.document.frames[index]);

        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /*
     * Returns an associative array where keys are layer names
     * and values are objects in the form { initialState: finalState: profile: zoomWidth: zoomHeight:}
     */
    exports.getAnimationData = function (initialState, finalState, zoomPercent, profile, useTransitionPath, reverseTransitionPath) {
        var data = {};
        
        for (var idLayer in initialState) {
            data[idLayer] = {
                initialState: sozi.display.CameraState.instance(),
                finalState: sozi.display.CameraState.instance(),
                useTransitionPath: useTransitionPath,
                reverseTransitionPath: reverseTransitionPath
            };
            
            data[idLayer].profile = profile || finalState[idLayer].transitionProfile;
            data[idLayer].initialState.setAtState(initialState[idLayer]);

            // If the current layer is referenced in final state, copy the final properties
            // else, copy initial state to final state for the current layer.
            if (finalState.hasOwnProperty(idLayer)) {
                data[idLayer].finalState.setAtState(finalState[idLayer]);
            }
            else {
                data[idLayer].finalState.setAtState(initialState[idLayer]);
            }

            // Keep the smallest angle difference between initial state and final state
            // TODO this should be handled in the interpolation function
            if (data[idLayer].finalState.angle - data[idLayer].initialState.angle &gt; 180) {
                data[idLayer].finalState.setRawAngle(data[idLayer].finalState.angle - 360);
            }
            else if (data[idLayer].finalState.angle - data[idLayer].initialState.angle &lt; -180) {
                data[idLayer].initialState.setRawAngle(data[idLayer].initialState.angle - 360);
            }

            var zp = zoomPercent || finalState[idLayer].transitionZoomPercent;
            
            if (zp &amp;&amp; finalState.hasOwnProperty(idLayer)) {
                data[idLayer].zoomWidth = getZoomData(zp,
                    initialState[idLayer].width,
                    finalState[idLayer].width);
                data[idLayer].zoomHeight = getZoomData(zp,
                    initialState[idLayer].height,
                    finalState[idLayer].height);
            }
        }
        return data;
    };
    
    exports.previewFrame = function (index) {
        exports.currentFrameIndex = index;
        animator.start(DEFAULT_DURATION_MS,
            exports.getAnimationData(viewPort.cameras, sozi.document.frames[index].states,
                DEFAULT_ZOOM_PERCENT, sozi.animation.profiles[DEFAULT_PROFILE]),
                false, false);
        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /*
     * Moves to a frame with the given index (0-based).
     *
     * This method animates the transition from the current
     * state of the display to the desired frame.
     *
     * If the given frame index corresponds to the next frame in the list,
     * the transition properties of the next frame are used.
     * Otherwise, default transition properties are used.
     */
    exports.moveToFrame = function (index) {
        if (waiting) {
            window.clearTimeout(nextFrameTimeout);
            waiting = false;
        }

        var durationMs, zoomPercent, profile, useTransitionPath, reverseTransitionPath;
        if (index === (exports.currentFrameIndex - 1) % sozi.document.frames.length) {
            durationMs = sozi.document.frames[exports.currentFrameIndex].transitionDurationMs;
            zoomPercent = undefined; // Set for each layer
            profile = undefined; // Set for each layer
            useTransitionPath = true;
            reverseTransitionPath = true;
        }
        else if (index === (exports.currentFrameIndex + 1) % sozi.document.frames.length) {
            durationMs = sozi.document.frames[index].transitionDurationMs;
            zoomPercent = undefined; // Set for each layer
            profile = undefined; // Set for each layer
            useTransitionPath = true;
            reverseTransitionPath = false;
        }
        else {
            durationMs = DEFAULT_DURATION_MS;
            zoomPercent = DEFAULT_ZOOM_PERCENT;
            profile = sozi.animation.profiles[DEFAULT_PROFILE];
            useTransitionPath = false;
            reverseTransitionPath = false;
        }

        sozi.events.fire(&quot;sozi.player.cleanup&quot;);

        playing = true;
        exports.currentFrameIndex = index;

        animator.start(durationMs, exports.getAnimationData(
            viewPort.cameras, sozi.document.frames[index].states,
            zoomPercent, profile,
            useTransitionPath, reverseTransitionPath));

        sozi.events.fire(&quot;sozi.player.framechange&quot;, index);
    };

    /**
     * Jumps to the first frame of the presentation.
     */
    exports.jumpToFirst = function () {
        exports.jumpToFrame(0);
    };
    
    /**
     * Moves to the first frame of the presentation.
     */
    exports.moveToFirst = function () {
        exports.moveToFrame(0);
    };

    /**
     * Jumps to the previous frame.
     */
    exports.jumpToPrevious = function () {
        var index = exports.currentFrameIndex;
        if (!animator.started || sourceFrameIndex &lt;= exports.currentFrameIndex) {
            index -= 1;
        }
        if (index &gt;= 0) {
            exports.jumpToFrame(index);
        }
    };

    /*
     * Moves to the previous frame.
     */
    exports.moveToPrevious = function () {
        for (var index = exports.currentFrameIndex - 1; index &gt;= 0; index -= 1) {
            var frame = sozi.document.frames[index];
            if (!frame.timeoutEnable || frame.timeoutMs !== 0) {
                exports.moveToFrame(index);
                break;
            }
        }
    };

    /**
     * Jumps to the next frame.
     */
    exports.jumpToNext = function () {
        var index = exports.currentFrameIndex;
        if (!animator.started || sourceFrameIndex &gt;= exports.currentFrameIndex) {
            index += 1;
        }
        if (index &lt; sozi.document.frames.length) {
            exports.jumpToFrame(index);
        }
    };

    /**
     * Moves to the next frame.
     */
    exports.moveToNext = function () {
        if (exports.currentFrameIndex &lt; sozi.document.frames.length - 1 || sozi.document.frames[exports.currentFrameIndex].timeoutEnable) {
            exports.moveToFrame((exports.currentFrameIndex + 1) % sozi.document.frames.length);
        }
    };

    /**
     * Jumps to the last frame of the presentation.
     */
    exports.jumpToLast = function () {
        exports.jumpToFrame(sozi.document.frames.length - 1);
    };

    /**
     * Moves to the last frame of the presentation.
     */
    exports.moveToLast = function () {
        exports.moveToFrame(sozi.document.frames.length - 1);
    };

    /*
     * Restores the current frame.
     *
     * This method restores the display to fit the current frame,
     * e.g. after the display has been zoomed or dragged.
     */
    exports.moveToCurrent = function () {
        exports.moveToFrame(exports.currentFrameIndex);
    };

    /*
     * Shows all the document in the browser window.
     */
    exports.showAll = function () {
        exports.stop();
        sozi.events.fire(&quot;sozi.player.cleanup&quot;);
        animator.start(DEFAULT_DURATION_MS,
            exports.getAnimationData(viewPort.cameras, viewPort.getDocumentState(),
                DEFAULT_ZOOM_PERCENT, sozi.animation.profiles[DEFAULT_PROFILE],
                false, false
            )
        );
    };

    /*
     * Event handler: display ready.
     */
    function onDisplayReady() {
        viewPort = sozi.display.ViewPort.instance(&quot;player&quot;, sozi.document.idLayerList, true);
        
        exports.startFromIndex(sozi.location.getFrameIndex());

        // Hack to fix the blank screen bug in Chrome/Chromium
        // See https://github.com/senshu/Sozi/issues/109
        window.setTimeout(viewPort.bind(viewPort.update), 1);
        
        sozi.events.fire(&quot;sozi.player.ready&quot;);
    }

    // TODO move the zoom code to display.js
    exports.onAnimationStep = function (progress, data) {
        for (var idLayer in data) {
            var camera = viewPort.cameras[idLayer];
            
            camera.interpolate(
                data[idLayer].initialState,
                data[idLayer].finalState,
                data[idLayer].profile(progress),
                data[idLayer].useTransitionPath,
                data[idLayer].reverseTransitionPath
            );

            var ps;
            if (data[idLayer].zoomWidth &amp;&amp; data[idLayer].zoomWidth.k !== 0) {
                ps = progress - data[idLayer].zoomWidth.ts;
                camera.width = data[idLayer].zoomWidth.k * ps * ps + data[idLayer].zoomWidth.ss;
            }

            if (data[idLayer].zoomHeight &amp;&amp; data[idLayer].zoomHeight.k !== 0) {
                ps = progress - data[idLayer].zoomHeight.ts;
                camera.height = data[idLayer].zoomHeight.k * ps * ps + data[idLayer].zoomHeight.ss;
            }

            camera.setClipped(data[idLayer].finalState.clipped);
        }

        viewPort.update();
    };
    
    /**
     * @depend animation.js
     */
    animator = sozi.animation.Animator.instance().augment({
        /*
         * Event handler: animation step.
         *
         * This method is called periodically by animator after the animation
         * has been started, and until the animation time is elapsed.
         *
         * Parameter data provides the following information:
         *    - initialState and finalState contain the geometrical properties of the display
         *      at the start and end of the animation.
         *    - profile is a reference to the speed profile function to use.
         *    - zoomWidth and zoomHeight are the parameters of the zooming polynomial if the current
         *      animation has a non-zero zooming effect.
         *
         * Parameter progress is a float number between 0 (start of the animation)
         * and 1 (end of the animation).
         */
        onStep: function (progress) {
            exports.onAnimationStep(progress, this.data);
        },
        
        /*
         * Event handler: animation done.
         *
         * This method is called by animator when the current animation is finished.
         *
         * If the animation was a transition in the normal course of the presentation,
         * then we call the waitTimeout method to process the timeout property of the current frame.
         */
        onDone: function () {
            for (var idLayer in this.data) {
                viewPort.cameras[idLayer].setAtState(this.data[idLayer].finalState);
            }

            viewPort.update();

            sourceFrameIndex = exports.currentFrameIndex;

            if (playing) {
                waitTimeout();
            }
        }
    });

    sozi.events.listen(&quot;sozi.display.ready&quot;, onDisplayReady); // @depend events.js
});

/*
    @depend framenumber.js
    @depend framelist.js
    @depend actions.js
    @depend player.js
    @depend display.js
    @depend document.js
    @depend location.js
    @depend links.js
*/
</script>
  <style
     ns1:version="13.11-30213629"
     id="sozi-style">/*
 * Sozi - A presentation tool using the SVG standard
 *
 * Copyright (C) 2010-2013 Guillaume Savaton
 *
 * This program is dual licensed under the terms of the MIT license
 * or the GNU General Public License (GPL) version 3.
 * A copy of both licenses is provided in the doc/ folder of the
 * official release of Sozi.
 * 
 * See http://sozi.baierouge.fr/wiki/en:license for details.
 */

#sozi-toc text {
   fill: #eff;
   font-family: Verdana, sans-serif;
   font-size: 12pt;
}

#sozi-toc text:hover {
   fill: #0cf;
   cursor: pointer;
}

#sozi-toc text.sozi-toc-current {
   fill: #fa4;
}

#sozi-toc-background {
   stroke: #222;
   stroke-opacity: 0.1;
   stroke-width: 10;
   fill: #222;
   fill-opacity: 0.9;
}

.sozi-toc-arrow {
   fill: #eff;
   fill-opacity: 0.75;
   stroke: none;
}

.sozi-toc-arrow:hover {
   fill: #0cf;
}

#sozi-framenumber circle {
   stroke: #222;
   stroke-opacity: 0.1;
   stroke-width: 4;
   fill: #222;
   fill-opacity: 0.9;
}

#sozi-framenumber text {
   fill: #eff;
   font-family: Verdana, sans-serif;
   font-size: 12pt;
}
</style>
  <ns1:frame
     id="frame7977"
     ns1:transition-path-hide="false"
     ns1:transition-profile="accelerate"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="1"
     ns1:title="Title"
     ns1:refid="rect4393" />
  <ns1:frame
     id="frame7978"
     ns1:refid="rect4393-5"
     ns1:title="Overview"
     ns1:sequence="2"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="500.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="accelerate"
     ns1:transition-path-hide="true" />
  <ns1:frame
     id="frame7979"
     ns1:refid="rect6174"
     ns1:title="Farm"
     ns1:sequence="3"
     ns1:hide="true"
     ns1:clip="false"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true" />
  <ns1:frame
     id="frame7980"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="false"
     ns1:hide="true"
     ns1:sequence="10"
     ns1:title="Test framework"
     ns1:refid="rect6915" />
  <ns1:frame
     id="frame7988"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="false"
     ns1:hide="true"
     ns1:sequence="4"
     ns1:title="Farm 2"
     ns1:refid="rect6174-5" />
  <ns1:frame
     ns1:refid="rect5602"
     ns1:title="Farm with libs"
     ns1:sequence="5"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame9774" />
  <ns1:frame
     ns1:refid="rect6174-5-7-4"
     ns1:title="Lib"
     ns1:sequence="6"
     ns1:hide="true"
     ns1:clip="false"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame1643" />
  <ns1:frame
     ns1:refid="rect5602"
     ns1:title="Test with libs"
     ns1:sequence="9"
     ns1:hide="true"
     ns1:clip="true"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame1743" />
  <ns1:frame
     id="frame1803"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="false"
     ns1:hide="true"
     ns1:sequence="11"
     ns1:title="Test framework 2"
     ns1:refid="rect6915-76-7" />
  <ns1:frame
     ns1:refid="rect6915-76"
     ns1:title="Test framework 3"
     ns1:sequence="12"
     ns1:hide="true"
     ns1:clip="false"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame1823" />
  <ns1:frame
     ns1:refid="rect6915-1"
     ns1:title="Data generator"
     ns1:sequence="14"
     ns1:hide="true"
     ns1:clip="false"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame2097" />
  <ns1:frame
     id="frame2159"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="false"
     ns1:hide="true"
     ns1:sequence="13"
     ns1:title="Data generator overview"
     ns1:refid="rect3963" />
  <ns1:frame
     id="frame3086"
     ns1:transition-path-hide="true"
     ns1:transition-profile="linear"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="1000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="15"
     ns1:title="Contact"
     ns1:refid="rect5907" />
  <ns1:frame
     id="frame4314"
     ns1:transition-path-hide="true"
     ns1:transition-profile="decelerate"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-duration-ms="2000.0"
     ns1:timeout-ms="5000.0"
     ns1:timeout-enable="false"
     ns1:show-in-frame-list="true"
     ns1:clip="true"
     ns1:hide="true"
     ns1:sequence="16"
     ns1:title="Get connected"
     ns1:refid="rect7122" />
  <ns1:frame
     ns1:refid="rect6174-5-7-4-2"
     ns1:title="Trigger"
     ns1:sequence="8"
     ns1:hide="true"
     ns1:clip="false"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame7725" />
  <ns1:frame
     ns1:refid="rect11630"
     ns1:title="Lib and Algo"
     ns1:sequence="7"
     ns1:hide="true"
     ns1:clip="false"
     ns1:show-in-frame-list="true"
     ns1:timeout-enable="false"
     ns1:timeout-ms="5000.0"
     ns1:transition-duration-ms="1000.0"
     ns1:transition-zoom-percent="0.0"
     ns1:transition-profile="linear"
     ns1:transition-path-hide="true"
     id="frame7836" />
</svg>
